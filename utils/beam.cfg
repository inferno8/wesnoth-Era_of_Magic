#KIRIOS Beam Weapon

#define HARM_BEAM_ACTION FILTER
		    [harm_unit]
                        [filter]
          	            {FILTER}
			    [filter_side]
			       [enemy_of]
			         side=$unit.side
			       [/enemy_of]
			    [/filter_side]
          		    [not]
				[filter_wml]
					[status]
						petrified=yes
					[/status]
				[/filter_wml]
			    [/not]
                        [/filter]
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
                        amount=$beamdmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
			delay=0
                    [/harm_unit]
		    [harm_unit]
                        [filter]
             	            {FILTER}
			    [filter_side]
			       [allied_with]
			         side=$unit.side
			       [/allied_with]
			       [or]
			         side=$unit.side
			       [/or]
			    [/filter_side]
          		    [not]
				[filter_wml]
					[status]
						petrified=yes
					[/status]
				[/filter_wml]
			    [/not]
                        [/filter]
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
                        amount=$beamdmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
			kill=no
			delay=0
			experience=no
                    [/harm_unit]
	[if]
	[have_unit]
		find_in=expfreeze
		{FILTER}
	[/have_unit]
	[else]
		[store_unit]
			[filter]
				{FILTER}
			[/filter]
			variable=expfreeze
			mode=append
		[/store_unit]
	[/else]
	[/if]
#enddef

#define WEAPON_SPECIAL_EOMA_BEAM
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=eoma_beam
        name= _ "beam"
		active_on=offense
        description=_ "When this attack is used, the attacker can hurt a unit behind his primary target and a unit behind that unit (3 units total). Damage dealt to the second target equals to 2/3 of raw firepower. Damage dealt to the third target equals to 1/3 of raw firepower. This effect works only on offence."
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
    [event]
        name=attacker_hits
		id=eoma_beam_event
        first_time_only=no

        [filter_attack]
            special=eoma_beam
        [/filter_attack]
		
		[store_locations]
			[filter_adjacent_location]
				x,y=$x2,$y2
				adjacent=$second_unit.facing
			[/filter_adjacent_location]
			variable=next_target
		[/store_locations]
		
		{VARIABLE beamdmg $weapon.damage}
	
		[if]
		{VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
		[then]
			{VARIABLE_OP beamdmg divide 2}
		[/then]
		[/if]
		
		{VARIABLE_OP beamdmg multiply 0.66}
		{VARIABLE_OP beamdmg round floor}

		#second
        {HARM_BEAM_ACTION (
			x,y=$next_target[0].x,$next_target[0].y
		)}
		
		{VARIABLE beamdmg $weapon.damage}
		
		[if]
		{VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
		[then]
			{VARIABLE_OP beamdmg divide 2}
		[/then]
		[/if]
		
		{VARIABLE_OP beamdmg multiply 0.33}
		{VARIABLE_OP beamdmg round floor}
		
		[store_locations]
			[filter_adjacent_location]
				x,y=$next_target[0].x,$next_target[0].y
				adjacent=$second_unit.facing
			[/filter_adjacent_location]
			variable=next_target
		[/store_locations]
		#third
		{HARM_BEAM_ACTION (
			x,y=$next_target[0].x,$next_target[0].y
		)}

        {CLEAR_VARIABLE beamdmg}
        #{CLEAR_VARIABLE next_target}
    [/event]
	
	{EXPFREEZE_EVENT}
	
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef
