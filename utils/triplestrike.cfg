#textdomain wesnoth-Era_of_Magic
#define WEAPON_SPECIAL_EOMA_TRIPLESTRIKE
    # wmlxgettext: [attack]
    # wmlxgettext: [specials]
    [dummy]
        id=eoma_triplestrike
        name= _ "triple strike"
        description= _ "This attack can hit some enemy units adjacent to both attacker and target (up to 3 harmed units total).
This ability does not work against berserker attacks.
This ability works even when defending.
Secondary target may be hit even when primary attack misses.
Chance to hit secondary target: 40%"+" "+{EOMA_NO_RPG}
        [filter_opponent]
            [filter_weapon]
                [not]
                    special_type_active=berserk
                [/not]
            [/filter_weapon]
        [/filter_opponent]
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

[event]
    name=attacker hits,attacker misses
    first_time_only=no
    id=eoma_triplestrike_event
    [filter_attack]
        special_id_active=eoma_triplestrike
    [/filter_attack]
    [filter_second_attack]
        [not]
            special_type_active=berserk
        [/not]
    [/filter_second_attack]
#ifdef MULTIPLAYER
    [filter_condition]
        [EoMa_not_rpg]
        [/EoMa_not_rpg]
    [/filter_condition]
#endif

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x2,$y2
            [/filter_adjacent]
            [filter_adjacent]
                x,y=$x1,$y1
                is_enemy=yes
            [/filter_adjacent]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    {VARIABLE areadmg $weapon.damage}

    [if]
        {VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
        [then]
            {VARIABLE_OP areadmg divide 2}
            {VARIABLE_OP areadmg round floor}
        [/then]
    [/if]

    [foreach]
        array=bystander
        [do]
            {RANDOM 1..100}
            [if]
                {VARIABLE_CONDITIONAL random less_than_equal_to 40}
                [then]
                    [EoMa_remember_indirectly_damaged_unit]
                        x,y=$this_item.x,$this_item.y
                    [/EoMa_remember_indirectly_damaged_unit]
                    [harm_unit]
                        [filter]
                            x,y=$this_item.x,$this_item.y
                        [/filter]
                        [filter_second]
                            x,y=$x1,$y1
                        [/filter_second]
                        amount=$areadmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
                        delay=0
                        experience=no
                        variable=triplevar
                    [/harm_unit]
                    #drain
                    [if]
                        {VARIABLE_CONDITIONAL this_item.race equals undead}
                        [or]
                            {VARIABLE_CONDITIONAL this_item.race equals (eoma_magical)}
                        [/or]
                        [or]
                            {VARIABLE_CONDITIONAL this_item.race equals mechanical}
                        [/or]
                        [else]
                            [if]
                                [have_unit]
                                    x,y=$x1,$y1
                                    [and]
                                        [has_attack]
                                            special_type=drains
                                        [/has_attack]
                                    [/and]
                                [/have_unit]
                                [then]
                                    {VARIABLE_OP triplevar.harm_amount divide 2}
                                    {VARIABLE_OP triplevar.harm_amount round floor}
                                    [heal_unit]
                                        [filter]
                                            x,y=$x1,$y1
                                        [/filter]
                                        amount=$triplevar.harm_amount
                                        animate=no
                                        restore_statuses=no
                                    [/heal_unit]
                                    [floating_text]
                                        x,y=$x1,$y1
                                        text="<span color='#00ff00'>" + "$triplevar.harm_amount|" + "</span>" # wmllint: ignore
                                    [/floating_text]
                                [/then]
                            [/if]
                        [/else]
                    [/if]
                    {CLEAR_VARIABLE triplevar}
                    [EoMa_trigger_pain_absorbation_aura_on_location]
                        x,y=$this_item.x,$this_item.y
                        #in pain absorb event, primary unit should be the damaged unit
                        #                        primary_unit=$unit.id
                        primary_unit=$this_item.id
                    [/EoMa_trigger_pain_absorbation_aura_on_location]
                [/then]
            [/if]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE bystander}
[/event]

[event]
    name=defender hits,defender misses
    first_time_only=no
    id=eoma_triplestrike_event2
    [filter_second_attack]
        special_id_active=eoma_triplestrike
    [/filter_second_attack]
    [filter_attack]
        [not]
            special_type_active=berserk
        [/not]
    [/filter_attack]
#ifdef MULTIPLAYER
    [filter_condition]
        [EoMa_not_rpg]
        [/EoMa_not_rpg]
    [/filter_condition]
#endif

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x2,$y2
                is_enemy=yes
            [/filter_adjacent]
            [filter_adjacent]
                x,y=$x1,$y1
            [/filter_adjacent]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    {VARIABLE areadmg $second_weapon.damage}

    [if]
        {VARIABLE_CONDITIONAL second_unit.status.slowed boolean_equals yes}
        [then]
            {VARIABLE_OP areadmg divide 2}
            {VARIABLE_OP areadmg round floor}
        [/then]
    [/if]

    [foreach]
        array=bystander
        [do]
            {RANDOM 1..100}
            [if]
                {VARIABLE_CONDITIONAL random less_than_equal_to 40}
                [then]
                    [EoMa_remember_indirectly_damaged_unit]
                        x,y=$this_item.x,$this_item.y
                    [/EoMa_remember_indirectly_damaged_unit]
                    [harm_unit]
                        [filter]
                            x,y=$this_item.x,$this_item.y
                        [/filter]
                        [filter_second]
                            x,y=$x2,$y2
                        [/filter_second]
                        amount=$areadmg
                        damage_type=$second_weapon.type
                        alignment=$second_unit.alignment
                        fire_event=yes
                        animate=defender
                        delay=0
                        experience=no
                        variable=triplevar
                    [/harm_unit]
                    #drain
                    [if]
                        {VARIABLE_CONDITIONAL this_item.race equals undead}
                        [or]
                            {VARIABLE_CONDITIONAL this_item.race equals (eoma_magical)}
                        [/or]
                        [or]
                            {VARIABLE_CONDITIONAL this_item.race equals mechanical}
                        [/or]
                        [else]
                            [if]
                                [have_unit]
                                    x,y=$x2,$y2
                                    [and]
                                        [has_attack]
                                            special_type=drains
                                        [/has_attack]
                                    [/and]
                                [/have_unit]
                                [then]
                                    {VARIABLE_OP triplevar.harm_amount divide 2}
                                    {VARIABLE_OP triplevar.harm_amount round floor}
                                    [heal_unit]
                                        [filter]
                                            x,y=$x2,$y2
                                        [/filter]
                                        amount=$triplevar.harm_amount
                                        animate=no
                                        restore_statuses=no
                                    [/heal_unit]
                                    [floating_text]
                                        x,y=$x2,$y2
                                        text="<span color='#00ff00'>" +$triplevar.harm_amount|+ "</span>" # wmllint: ignore
                                    [/floating_text]
                                [/then]
                            [/if]
                        [/else]
                    [/if]
                    {CLEAR_VARIABLE triplevar}
                    [EoMa_trigger_pain_absorbation_aura_on_location]
                        x,y=$this_item.x,$this_item.y
                        #in pain absorb event, primary unit should be the damaged unit
                        #                        primary_unit=$unit.id
                        primary_unit=$this_item.id
                    [/EoMa_trigger_pain_absorbation_aura_on_location]
                [/then]
            [/if]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE bystander}
[/event]

{EOMA_INDIRECTLY_DAMAGED_UNIT_EXPERIENCE_EVENT}

[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef
