#textdomain wesnoth-Era_of_Magic

#define EOMA_INDIRECTLY_DAMAGED_UNIT_EXPERIENCE_EVENT
    [event]
        name=attack end
        first_time_only=no
        id=eoma_indirect_damage_xp_event
#ifdef MULTIPLAYER
        [filter_condition]
            [EoMa_not_rpg]
            [/EoMa_not_rpg]
        [/filter_condition]
#endif
        [EoMa_remove_array_duplicates]
            name=EoMa_indirectly_damaged_unit
            attribute=id
        [/EoMa_remove_array_duplicates]
        [foreach]
            array=EoMa_indirectly_damaged_unit
            [do]
                # give indirectly damaged unit fight xp
                [if]
                    [have_unit]
                        id=$this_item.id
                        [not]
                            ability=eoma_soul_catcher
                        [/not]
                    [/have_unit]
                    [then]
                        [modify_unit]
                            [filter]
                                id=$this_item.id
                            [/filter]
                            experience="$($this_unit.experience + $unit.level)"
                        [/modify_unit]
                    [/then]
                [/if]
                # give primary unit kill xp
                [if]
                    [have_unit]
                        id=$this_item.id
                    [/have_unit]
                    [else]
                        {VARIABLE expkill $this_item.level}
                        {VARIABLE_OP expkill multiply 8}
                        {IF_VAR expkill equals 0 (
                            [then]
                                {VARIABLE expkill 4}
                            [/then]
                        )}
                        [modify_unit]
                            [filter]
                                id=$unit.id
                            [/filter]
                            experience="$($this_unit.experience + $expkill)"
                        [/modify_unit]
                        {CLEAR_VARIABLE expkill}
                    [/else]
                [/if]
            [/do]
        [/foreach]

        {CLEAR_VARIABLE EoMa_indirectly_damaged_unit}
    [/event]
#enddef

#define WEAPON_SPECIAL_EOMA_ALLAROUND CHANCETOHIT
    # wmlxgettext: [attack]
    # wmlxgettext: [specials]
    [dummy]
        id=eoma_allaround_{CHANCETOHIT}
        name= _ "all around"
        active_on=offense
        description= _ "This attack can hit some of adjacent enemy units (or even all depending on your luck.
This effect works only on offence.
This ability does not work against berserker attacks.
Secondary target may be hit even when primary attack misses.
Chance to hit secondary target: " + {CHANCETOHIT} + "%"+" "+{EOMA_NO_RPG}
        [filter_opponent]
            [filter_weapon]
                [not]
                    special_type_active=berserk
                [/not]
            [/filter_weapon]
        [/filter_opponent]
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

[event]
    name=attacker hits,attacker misses
    first_time_only=no
    id=eoma_allaround_event_{CHANCETOHIT}
    [filter_attack]
        special_id_active=eoma_allaround_{CHANCETOHIT}
    [/filter_attack]
    [filter_second_attack]
        [not]
            special_type_active=berserk
        [/not]
    [/filter_second_attack]
#ifdef MULTIPLAYER
    [filter_condition]
        [EoMa_not_rpg]
        [/EoMa_not_rpg]
    [/filter_condition]
#endif

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x1,$y1
                is_enemy=yes
            [/filter_adjacent]
            [not]
                x,y=$x2,$y2
            [/not]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    {VARIABLE areadmg $weapon.damage}

    [if]
        {VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
        [then]
            {VARIABLE_OP areadmg divide 2}
            {VARIABLE_OP areadmg round floor}
        [/then]
    [/if]

    [foreach]
        array=bystander
        [do]
            {RANDOM 1..100}
            [if]
                {VARIABLE_CONDITIONAL random less_than_equal_to {CHANCETOHIT}}
                [then]
                    [EoMa_remember_indirectly_damaged_unit]
                        x,y=$this_item.x,$this_item.y
                    [/EoMa_remember_indirectly_damaged_unit]
                    [harm_unit]
                        [filter]
                            x,y=$this_item.x,$this_item.y
                            [not]
                                [filter_wml]
                                    [status]
                                        petrified=yes
                                    [/status]
                                [/filter_wml]
                            [/not]
                        [/filter]
                        [filter_second]
                            x,y=$x1,$y1
                        [/filter_second]
                        amount=$areadmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
                        delay=0
                        experience=no
                    [/harm_unit]
                    [EoMa_trigger_pain_absorbation_aura_on_location]
                        x,y=$this_item.x,$this_item.y
                        #in pain absorb event, primary unit should be the damaged unit
                        #                        primary_unit=$unit.id
                        primary_unit=$this_item.id
                    [/EoMa_trigger_pain_absorbation_aura_on_location]
                [/then]
            [/if]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE bystander}
[/event]

{EOMA_INDIRECTLY_DAMAGED_UNIT_EXPERIENCE_EVENT}
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef
