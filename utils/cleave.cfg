#textdomain wesnoth-Era_of_Magic

#define AOE_HARM_UNIT_ATTACK

         	    [harm_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
			    [filter_side]
			       [enemy_of]
			         side=$unit.side
			       [/enemy_of]
			    [/filter_side]
          		    [not]
				[filter_wml]
					[status]
						petrified=yes
					[/status]
				[/filter_wml]
			    [/not]
                        [/filter]
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
                        amount=$areadmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
			delay=0
			experience=no
                    [/harm_unit]
	 	    [harm_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
			    [filter_side]
			       [allied_with]
			         side=$unit.side
			       [/allied_with]
			       [or]
			         side=$unit.side
			       [/or]
			    [/filter_side]
                        [/filter]
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
                        amount=$areadmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
			kill=no
			delay=0
			experience=no
                    [/harm_unit]
#enddef

#define AOE_HARM_UNIT_DEFENSE

					[harm_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
			    [filter_side]
			       [enemy_of]
			         side=$second_unit.side
			       [/enemy_of]
			    [/filter_side]
          		    [not]
				[filter_wml]
					[status]
						petrified=yes
					[/status]
				[/filter_wml]
			    [/not]
                        [/filter]
						[filter_second]
							x,y=$x2,$y2
						[/filter_second]
                        amount=$areadmg
                        damage_type=$second_weapon.type
                        alignment=$second_unit.alignment
                        fire_event=yes
                        animate=defender
						delay=0
						experience=no
                    [/harm_unit]
					[harm_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
			    [filter_side]
			       [allied_with]
			         side=$second_unit.side
			       [/allied_with]
			       [or]
			         side=$second_unit.side
			       [/or]
			    [/filter_side]
                        [/filter]
						[filter_second]
							x,y=$x2,$y2
						[/filter_second]
                        amount=$areadmg
                        damage_type=$second_weapon.type
                        alignment=$second_unit.alignment
                        fire_event=yes
                        animate=defender
			kill=no
			delay=0
			experience=no
                    [/harm_unit]
#enddef

#define WEAPON_SPECIAL_EOMA_CLEAVE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=eoma_cleave
        name= _ "cleave"
        description=_"A unit with this ability can hurt units that are adjacent to the attacker and the defender at the same time."
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

	[event]
        name=attacker hits,attacker misses
        first_time_only=no
		id=eoma_cleave_event
        [filter_attack]
            special=eoma_cleave
        [/filter_attack]

        [store_unit]
            [filter]
                [filter_adjacent]
					x,y=$x2,$y2
				[/filter_adjacent]
				[filter_adjacent]
					x,y=$x1,$y1
				[/filter_adjacent]
				[not]
					[filter_wml]
						[status]
							petrified=yes
						[/status]
					[/filter_wml]
				[/not]
            [/filter]
            variable=bystander
        [/store_unit]
		
		{VARIABLE areadmg $weapon.damage}
		
        [if]
		{VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
            [then] 
				{VARIABLE_OP areadmg divide 2}
				{VARIABLE_OP areadmg round floor}
            [/then]
        [/if]

        {FOREACH bystander i}
            {RANDOM 1..100}
            [if]
			{VARIABLE_CONDITIONAL random less_than_equal_to 50}
                [then]
                {AOE_HARM_UNIT_ATTACK}
					[if]
					[have_unit]
						find_in=expfreeze
						x,y=$bystander[$i].x,$bystander[$i].y
					[/have_unit]
					[else]
						[store_unit]
							[filter]
								x,y=$bystander[$i].x,$bystander[$i].y
							[/filter]
							variable=expfreeze
							mode=append
						[/store_unit]
					[/else]
					[/if]
                [/then]
            [/if]
        {NEXT i}
    [/event]
	
	[event]
        name=defender hits,defender misses
        first_time_only=no
		id=eoma_cleave_event2
        [filter_second_attack]
            special=eoma_cleave
        [/filter_second_attack]

        [store_unit]
            [filter]
                [filter_adjacent]
					x,y=$x1,$y1
				[/filter_adjacent]
				[filter_adjacent]
					x,y=$x2,$y2
				[/filter_adjacent]
				[not]
					[filter_wml]
						[status]
							petrified=yes
						[/status]
					[/filter_wml]
				[/not]
            [/filter]
            variable=bystander
        [/store_unit]
		
		{VARIABLE areadmg $weapon.damage}
		
        [if]
		{VARIABLE_CONDITIONAL second_unit.status.slowed boolean_equals yes}
            [then] 
				{VARIABLE_OP areadmg divide 2}
				{VARIABLE_OP areadmg round floor}
            [/then]
        [/if]

        {FOREACH bystander i}
            {RANDOM 1..100}
            [if]
			{VARIABLE_CONDITIONAL random less_than_equal_to 50}
                [then]
                {AOE_HARM_UNIT_DEFENSE}
					[if]
					[have_unit]
						find_in=expfreeze
						x,y=$bystander[$i].x,$bystander[$i].y
					[/have_unit]
					[else]
						[store_unit]
							[filter]
								x,y=$bystander[$i].x,$bystander[$i].y
							[/filter]
							variable=expfreeze
							mode=append
						[/store_unit]
					[/else]
					[/if]
                [/then]
            [/if]
        {NEXT i}
    [/event]
	
	{EXPFREEZE_EVENT}

[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#define WEAPON_SPECIAL_EOMA_CLEAVE_CUSTOM VALUE DISPLAYVALUE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=eoma_cleave{DISPLAYVALUE}
        name= _ "cleave"+" {DISPLAYVALUE}%"
        description=_"A unit with this ability can hurt units that are adjacent to the attacker and the defender at the same time. The damage dealt equals {DISPLAYVALUE}% of the base damage."
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

	[event]
        name=attacker hits,attacker misses
        first_time_only=no
		id=eoma_cleave{DISPLAYVALUE}_event
        [filter_attack]
            special=eoma_cleave{DISPLAYVALUE}
        [/filter_attack]

        [store_unit]
            [filter]
                [filter_adjacent]
					x,y=$x2,$y2
				[/filter_adjacent]
				[filter_adjacent]
					x,y=$x1,$y1
				[/filter_adjacent]
				[not]
					[filter_wml]
						[status]
							petrified=yes
						[/status]
					[/filter_wml]
				[/not]
            [/filter]
            variable=bystander
        [/store_unit]
		
		{VARIABLE areadmg $weapon.damage}
		{VARIABLE_OP areadmg multiply {VALUE}}
		
        [if]
		{VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
            [then] 
				{VARIABLE_OP areadmg divide 2}
				{VARIABLE_OP areadmg round floor}
            [/then]
        [/if]
		
        {FOREACH bystander i}
            {RANDOM 1..100}
            [if]
			{VARIABLE_CONDITIONAL random less_than_equal_to 50}
                [then]
                {AOE_HARM_UNIT_ATTACK}
					[if]
					[have_unit]
						find_in=expfreeze
						x,y=$bystander[$i].x,$bystander[$i].y
					[/have_unit]
					[else]
						[store_unit]
							[filter]
								x,y=$bystander[$i].x,$bystander[$i].y
							[/filter]
							variable=expfreeze
							mode=append
						[/store_unit]
					[/else]
					[/if]
                [/then]
            [/if]
        {NEXT i}
    [/event]
	
	[event]
        name=defender hits,defender misses
        first_time_only=no
		id=eoma_cleave{DISPLAYVALUE}_event2
        [filter_second_attack]
            special=eoma_cleave{DISPLAYVALUE}
        [/filter_second_attack]

        [store_unit]
            [filter]
                [filter_adjacent]
					x,y=$x1,$y1
				[/filter_adjacent]
				[filter_adjacent]
					x,y=$x2,$y2
				[/filter_adjacent]
				[not]
					[filter_wml]
						[status]
							petrified=yes
						[/status]
					[/filter_wml]
				[/not]
            [/filter]
            variable=bystander
        [/store_unit]
		
		{VARIABLE areadmg $weapon.damage}
		{VARIABLE_OP areadmg multiply {VALUE}}
		
        [if]
		{VARIABLE_CONDITIONAL second_unit.status.slowed boolean_equals yes}
            [then] 
				{VARIABLE_OP areadmg divide 2}
				{VARIABLE_OP areadmg round floor}
            [/then]
        [/if]

        {FOREACH bystander i}
            {RANDOM 1..100}
            [if]
			{VARIABLE_CONDITIONAL random less_than_equal_to 50}
                [then]
                {AOE_HARM_UNIT_DEFENSE}
					[if]
					[have_unit]
						find_in=expfreeze
						x,y=$bystander[$i].x,$bystander[$i].y
					[/have_unit]
					[else]
						[store_unit]
							[filter]
								x,y=$bystander[$i].x,$bystander[$i].y
							[/filter]
							variable=expfreeze
							mode=append
						[/store_unit]
					[/else]
					[/if]
                [/then]
            [/if]
        {NEXT i}
    [/event]
	
	{EXPFREEZE_EVENT}

[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#define WEAPON_SPECIAL_EOMA_CLEAVEHALF
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=eoma_cleavehalf
        name= _ "cleave 50%"
        description=_"A unit with this ability can hurt units that are adjacent to the attacker and the defender at the same time. The damage dealt equals 50% of the base damage."
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

	[event]
        name=attacker hits,attacker misses
        first_time_only=no
		id=eoma_cleavehalf_event
        [filter_attack]
            special=eoma_cleavehalf
        [/filter_attack]

        [store_unit]
            [filter]
                [filter_adjacent]
					x,y=$x2,$y2
				[/filter_adjacent]
				[filter_adjacent]
					x,y=$x1,$y1
				[/filter_adjacent]
				[not]
					[filter_wml]
						[status]
							petrified=yes
						[/status]
					[/filter_wml]
				[/not]
            [/filter]
            variable=bystander
        [/store_unit]
		
		{VARIABLE areadmg $weapon.damage}
		
        [if]
		{VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
            [then] 
				{VARIABLE_OP areadmg divide 2}
				{VARIABLE_OP areadmg round floor}
            [/then]
        [/if]
		
		{VARIABLE_OP areadmg divide 2}

        {FOREACH bystander i}
            {RANDOM 1..100}
            [if]
			{VARIABLE_CONDITIONAL random less_than_equal_to 50}
                [then]
                {AOE_HARM_UNIT_ATTACK}
					[if]
					[have_unit]
						find_in=expfreeze
						x,y=$bystander[$i].x,$bystander[$i].y
					[/have_unit]
					[else]
						[store_unit]
							[filter]
								x,y=$bystander[$i].x,$bystander[$i].y
							[/filter]
							variable=expfreeze
							mode=append
						[/store_unit]
					[/else]
					[/if]
                [/then]
            [/if]
        {NEXT i}
    [/event]
	
	[event]
        name=defender hits,defender misses
        first_time_only=no
		id=eoma_cleavehalf_event2
        [filter_second_attack]
            special=eoma_cleavehalf
        [/filter_second_attack]

        [store_unit]
            [filter]
                [filter_adjacent]
					x,y=$x1,$y1
				[/filter_adjacent]
				[filter_adjacent]
					x,y=$x2,$y2
				[/filter_adjacent]
				[not]
					[filter_wml]
						[status]
							petrified=yes
						[/status]
					[/filter_wml]
				[/not]
            [/filter]
            variable=bystander
        [/store_unit]
		
		{VARIABLE areadmg $weapon.damage}
		
        [if]
		{VARIABLE_CONDITIONAL second_unit.status.slowed boolean_equals yes}
            [then] 
				{VARIABLE_OP areadmg divide 2}
				{VARIABLE_OP areadmg round floor}
            [/then]
        [/if]
		
		{VARIABLE_OP areadmg divide 2}

        {FOREACH bystander i}
            {RANDOM 1..100}
            [if]
			{VARIABLE_CONDITIONAL random less_than_equal_to 50}
                [then]
                {AOE_HARM_UNIT_DEFENSE}
					[if]
					[have_unit]
						find_in=expfreeze
						x,y=$bystander[$i].x,$bystander[$i].y
					[/have_unit]
					[else]
						[store_unit]
							[filter]
								x,y=$bystander[$i].x,$bystander[$i].y
							[/filter]
							variable=expfreeze
							mode=append
						[/store_unit]
					[/else]
					[/if]
                [/then]
            [/if]
        {NEXT i}
    [/event]
	
	{EXPFREEZE_EVENT}

[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef
