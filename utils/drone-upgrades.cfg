#textdomain wesnoth-Era_of_Magic
#define ABILITY_EOMA_ADDITIONALARMOR
    [dummy]
        id=eoma_upgradable_armor
        name= _ "additional armor"
        description=_"This drone has additional armor plates granting it bonus 12 HP and increased blade/pierce/impact resistances (+10%)."
    [/dummy]
#enddef

#define ABILITY_EOMA_RUNEARMOR
    [resistance]
        id=eoma_upgradable_runearmor
        value=50
        max_value=50
        apply_to=fire,cold,arcane
        name= _ "runic plate"
        description=_"This drone is protected by runes giving it improved fire, cold and arcane resistance (50%)"
        affect_self=yes
        affect_allies=no
    [/resistance]
#enddef

#define ABILITY_EOMA_DRONEBETTERBLADES
    [dummy]
        id=eoma_upgradable_blades
        name= _ "better blades"
        description=_"This drone has better blades mounted on its legs. This provides it with a bonus damage."
    [/dummy]
#enddef

#define ABILITY_EOMA_ROTOR
    [dummy]
        id=eoma_upgradable_rotor
        name= _ "rotor"
        description=_"This drone has rotor mounted on its top allowing it to fly. It allows it to move faster (+1 movepoint)."
    [/dummy]
#enddef

#define ABILITY_EOMA_CANNON
    [dummy]
        id=eoma_upgradable_cannon
        name= _ "cannon"
        description=_"This drone is equipped with a small cannon."
    [/dummy]
#enddef

#define ABILITY_EOMA_DRONEKAMIKAZE
    [dummy]
        id=eoma_upgradable_kamikaze
        name= _ "kamikaze"
        description=_"This drone can execute kamikaze protocols."
    [/dummy]
#enddef

#define ABILITY_EOMA_DRONEBERSERK
    [dummy]
        id=eoma_upgradable_berserk
        name= _ "berserker ai"
        description=_"This drone has the berserker ai module."
    [/dummy]
#enddef

#define ABILITY_EOMA_DRONERUNEDAMAGE
    [dummy]
        id=eoma_upgradable_runedamage
        name= _ "damage rune"
        description=_"This drone has the damage rune granting additional magical fire attack."
    [/dummy]
#enddef

#define ABILITY_EOMA_UPGRADEDRONE_MODULE MODULE NAME
    #this ability does nothing by itself but is used in filters and provides visual identification of units capable of installing upgrades.
    [dummy]
        id=eoma_upgradedrone_{MODULE}
        name= _ "upgrade drone"+" ("+{NAME}+")"
        description=_"This unit can install a specfic upgrade module on a Drone. Installing upgrades does not cost any movepoints or attacks."
    [/dummy]
#enddef

#for units that have two upgrade modules, to save UI space

#define ABILITY_EOMA_UPGRADEDRONE_MODULE_DOUBLE MODULE1 NAME1 MODULE2 NAME2
    #this ability does nothing by itself provides visual identification of units capable of installing upgrades.
    [dummy]
        id=eoma_upgradedrone_ui_{MODULE1}_{MODULE2}
        name= _ "upgrade drone"+" ("+{NAME1}+", "+{NAME2}+")"
        description=_"This unit can install specific upgrade modules on a Drone. Installing upgrades does not cost any movepoints or attacks."
    [/dummy]
    #this ability does nothing by itself but is used in filters
    [dummy]
        id=eoma_upgradedrone_{MODULE1}
    [/dummy]
    [dummy]
        id=eoma_upgradedrone_{MODULE2}
    [/dummy]
#enddef

## {ABILITY_EOMA_UPGRADEDRONE_MODULE armor _"armor"}
## {ABILITY_EOMA_UPGRADEDRONE_MODULE runearmor _"runearmor"}
## {ABILITY_EOMA_UPGRADEDRONE_MODULE blades _"blades"}
## {ABILITY_EOMA_UPGRADEDRONE_MODULE rotor _"rotor"}
## {ABILITY_EOMA_UPGRADEDRONE_MODULE cannon _"cannon"}
## {ABILITY_EOMA_UPGRADEDRONE_MODULE kamikaze _"kamikaze module"}
## {ABILITY_EOMA_UPGRADEDRONE_MODULE berserker _"berserker ai"}
## {ABILITY_EOMA_UPGRADEDRONE_MODULE runedamage _"damage rune"}
## {ABILITY_EOMA_UPGRADEDRONE_MODULE furnace _"furnace"}

#define DRONE_MENU_UPGRADE DESCRIPTION ABILITY MODULE COST EFFECT
    [set_menu_item]
        id=droneupgrade_menu_{ABILITY}
        description={DESCRIPTION}+" - "+"Cost:"+" "+"{COST}"
        [show_if]
            [have_unit]
                x,y=$x1,$y1
                [not]
                    ability={ABILITY}
                [/not]
            [/have_unit]
        [/show_if]

        [filter_location]
            [filter]
                ability=eoma_upgradable
                side=$side_number
            [/filter]
            [filter_adjacent_location]
                [filter]
                    ability={MODULE}
                    side=$side_number
                [/filter]
            [/filter_adjacent_location]
        [/filter_location]
        [command]
            [store_gold]
                variable=actualgold
                side=$side_number
            [/store_gold]
            [if]
                {VARIABLE_CONDITIONAL actualgold greater_than_equal_to {COST}}
                [then]
                    [gold]
                        amount=-{COST}
                        side=$side_number
                    [/gold]
                    [store_unit]
                        [filter]
                            x,y=$x1,$y1
                        [/filter]
                        variable=drone
                    [/store_unit]
                    [object]
                        silent=yes
                        {EFFECT}
                        [filter]
                            x,y=$x1,$y1
                            ability=eoma_upgradable
                        [/filter]
                    [/object]
                    [store_unit]
                        [filter]
                            x,y=$x1,$y1
                        [/filter]
                        variable=unit
                    [/store_unit]
                    {VARIABLE_OP unit.variables.dronepoints add 1}
                    [unstore_unit]
                        variable=unit
                        find_vacant=no
                    [/unstore_unit]
                    [if]
                        {VARIABLE_CONDITIONAL unit.variables.dronepoints greater_than 12}
                        [then]
                            [kill]
                                id=$unit.id
                                animate=no
                            [/kill]
                            {UNIT $unit.side EoMa_Perfect_Drone $x1 $y1 ()}
                        [/then]
                    [/if]
                    {CLEAR_VARIABLE drone}
                [/then]
                [else]
                    [print]
                        text= _ "You don't have enough gold!"
                        size=18
                        red=255
                    [/print]
                [/else]
            [/if]
            {CLEAR_VARIABLE actualgold}
        [/command]
    [/set_menu_item]
#enddef

#define DRONE_MENU_UPGRADE_ALL
    {DRONE_MENU_UPGRADE ( _ "Give additional armor") eoma_upgradable_armor eoma_upgradedrone_armor 5 (
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_EOMA_ADDITIONALARMOR}
            [/abilities]
        [/effect]
        [effect]
            apply_to=hitpoints
            increase_total=12
            heal_full=yes
        [/effect]
        [effect]
            apply_to=resistance
            replace=no
            [resistance]
                blade=-10
                pierce=-10
                impact=-10
            [/resistance]
        [/effect]
        [effect]
            apply_to=image_mod
            add="~BLIT(units/runemasters-machines/drone-upgrade-armor.png)"
        [/effect]
        [effect]
            apply_to=status
            remove=poisoned
        [/effect]
        [effect]
            apply_to=status
            remove=slowed
        [/effect]
    )}
    {DRONE_MENU_UPGRADE ( _ "Give runic plate") eoma_upgradable_runearmor eoma_upgradedrone_runearmor 6 (
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_EOMA_RUNEARMOR}
            [/abilities]
        [/effect]
        [effect]
            apply_to=image_mod
            add="~BLIT(units/runemasters-machines/drone-upgrade-rune.png)"
        [/effect]
    )}
    {DRONE_MENU_UPGRADE ( _ "Give better blades") eoma_upgradable_blades eoma_upgradedrone_blades 3 (
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_EOMA_DRONEBETTERBLADES}
            [/abilities]
        [/effect]
        [effect]
            apply_to=attack
            name=legs
            increase_damage=2
        [/effect]
        [effect]
            apply_to=attack
            name=legs_berserk
            increase_damage=2
        [/effect]
        [effect]
            apply_to=image_mod
            add="~BLIT(units/runemasters-machines/drone-upgrade-legs.png)"
        [/effect]
    )}
    {DRONE_MENU_UPGRADE ( _ "Give rotor") eoma_upgradable_rotor eoma_upgradedrone_rotor 5 (
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_EOMA_ROTOR}
            [/abilities]
        [/effect]
        [effect]
            apply_to=variation
            name=dronerotor
        [/effect]
    )}
    {DRONE_MENU_UPGRADE ( _ "Mount cannon") eoma_upgradable_cannon eoma_upgradedrone_cannon 5 (
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_EOMA_CANNON}
            [/abilities]
        [/effect]
        [effect]
            apply_to=new_attack
            name=cannon
            description=_"cannon"
            icon=attacks/bullet.png
            type=impact
            range=ranged
            damage=15
            number=1
            [specials]
                {WEAPON_SPECIAL_EOMA_SKILLED}
            [/specials]
        [/effect]
        [effect]
            apply_to=image_mod
            add="~BLIT(units/runemasters-machines/drone-upgrade-gun.png)"
        [/effect]
    )}
    {DRONE_MENU_UPGRADE ( _ "Install kamikaze module") eoma_upgradable_kamikaze eoma_upgradedrone_kamikaze 6 (
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_EOMA_DRONEKAMIKAZE}
            [/abilities]
        [/effect]
        [effect]
            apply_to=new_attack
            name=kamikazedrone
            description=_"kamikaze"
            icon=attacks/explosion.png
            type=fire
            range=kamikaze
            damage=30
            number=1
            [specials]
                {WEAPON_SPECIAL_EOMA_ALWAYSHITS}
            [/specials]
        [/effect]
        [effect]
            apply_to=image_mod
            add="~BLIT(units/runemasters-machines/drone-upgrade-kamikaze.png)"
        [/effect]
    )}
    {DRONE_MENU_UPGRADE ( _ "Give berserker ai module") eoma_upgradable_berserk eoma_upgradedrone_berserker 4 (
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_EOMA_DRONEBERSERK}
            [/abilities]
        [/effect]
        [effect]
            apply_to=new_attack
            name=legs_berserk
            description=_"legs"
            icon=attacks/pike.png
            type=pierce
            range=melee
            damage=$drone.attack[0].damage
            number=$drone.attack[0].number
            [specials]
                {WEAPON_SPECIAL_BERSERK}
            [/specials]
        [/effect]
        [effect]
            apply_to=image_mod
            add="~BLIT(units/runemasters-machines/drone-upgrade-berserk.png)"
        [/effect]
    )}
    {DRONE_MENU_UPGRADE ( _ "Give damage rune") eoma_upgradable_runedamage eoma_upgradedrone_runedamage 5 (
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_EOMA_DRONERUNEDAMAGE}
            [/abilities]
        [/effect]
        [effect]
            apply_to=new_attack
            name=runes
            description=_"damage rune"
            icon=attacks/rune.png
            type=fire
            range=ranged
            damage=4
            number=3
            [specials]
                {WEAPON_SPECIAL_MAGICAL}
            [/specials]
        [/effect]
        [effect]
            apply_to=image_mod
            add="~BLIT(units/runemasters-machines/drone-upgrade-rune-damage.png)"
        [/effect]
        [effect]
            apply_to=overlay
            add="units/runemasters-machines/drone-upgrade-rune-damage.png"
        [/effect]
    )}
    {DRONE_MENU_UPGRADE ( _ "Mount portable furnace") eoma_heataura20 eoma_upgradedrone_furnace 5 (
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_EOMA_HEATAURA 20}
                {ABILITY_ILLUMINATES HALO="units/runemasters-machines/drone-upgrade-furnace-halo.png"}
            [/abilities]
        [/effect]
        [effect]
            apply_to=resistance
            replace=no
            [resistance]
                cold=-20
            [/resistance]
        [/effect]
        [effect]
            apply_to=overlay
            add="units/runemasters-machines/drone-upgrade-furnace.png"
        [/effect]
    )}

#enddef

#define ABILITY_EOMA_UPGRADABLE
    [dummy]
        id=eoma_upgradable
        name= _ "upgradable"
        description=_"This unit may receive different upgrades when adjacent to specific units. Also, when advancing, it can get different improvements."+"

List of units capable of mounting different upgrades:
- Technician, Constructor (additional armor)
- Runesmith, Rune Artist, Runemaster (rune armor, damage rune)
- Veteran, Runic Warrior, Rune Lord, Cadet, Commando (better blades)
- Steam Berserker, Steam Turboserker, Red Steam Ulfserker (kamikaze module, berserk ai)
- Technocrat, Technologist (kamikaze module)
- Tank, Pacificator, Dwarvish Mobile Turret, Mobile Defensive Platform, Dwarvish Cannoneer, Trench Sweeper (mini-cannon)
- Heavy Balloon, Steamcopter, Flying Fortress, Battlecopter, Mechanical Dragon (rotor)
- Mechanical Dragon (portable furnace)

List of per advance improvements:
- +1 melee strike
- +1 melee damage
- +1 movepoints
- auto-repair+6
- hit and run 1
- add zone of control
- +8/4 max hp"
    [/dummy] # wmlxgettext: [abilities]
[/abilities]

[event]
    name=start,recruit,recall,post advance,unit placed
    id=droneupgrades_start_event

    {DRONE_MENU_UPGRADE_ALL}
    [allow_undo]
    [/allow_undo]
[/event]

[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_MODERNIZATION
    [dummy]
        id=eoma_modernization
        name= _ "modernization"
        description=_"This unit can make an adjacent drone advance, yet retain its exp after doing so. The unit uses up all of his movepoints, and then gains some exp. Also, the drone is unable to move/attack on the same turn as it is advanced."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=select
    id=eoma_modernization_select_event
    first_time_only=no
    [filter]
        ability=eoma_modernization
        side=$side_number
    [/filter]

    [store_unit]
        [filter]
            x,y=$x1,$y1
        [/filter]
        variable=last_selected_unit
    [/store_unit]
[/event]

[event]
    name=start,recruit,recall,post advance,unit placed
    id=eoma_modernization_init_event
    first_time_only=no

    [set_menu_item]
        id=completerepair
        description= _ "Upgrade Drone"+" - "+ _ "gold:"+" "+4
        image=attacks/wrench.png~SCALE(20,20)
        [show_if]
        [/show_if]

        [filter_location]
            [filter]
                type=EoMa_Drone
                side=$side_number
            [/filter]
            [filter_adjacent_location]
                [filter]
                    ability=eoma_modernization
                    side=$side_number
                    #ability is usable when above max moves (usually either in debug or with other mods), but still reduces moves to 0 as usual
                    formula="moves >= max_moves"
                [/filter]
            [/filter_adjacent_location]
            [not]
                terrain={EOMA_IMPASSABLE_AND_UNWALKABLE_TERRAIN_FILTER}
            [/not]
        [/filter_location]
        [command]
            [store_gold]
                variable=actualgold
                side=$side_number
            [/store_gold]
            {IF_VAR actualgold greater_than_equal_to 4 (
                [then]
                    [sync_variable]
                        name=last_selected_unit
                    [/sync_variable]
                    [gold]
                        amount=-4
                        side=$side_number
                    [/gold]
                    [store_unit]
                        [filter]
                            x,y=$x1,$y1
                        [/filter]
                        variable=drone
                    [/store_unit]
                    {ADVANCE_UNIT x,y=$x1,$y1 ()}
                    {MODIFY_UNIT x,y=$x1,$y1 attacks_left 0}
                    {MODIFY_UNIT x,y=$x1,$y1 moves 0}
                    {MODIFY_UNIT x,y=$x1,$y1 experience $drone.experience}
                    {CLEAR_VARIABLE drone}
                    [store_unit]
                        [filter]
                            ability=eoma_modernization
                            side=$side_number
                            #ability is usable when above max moves (usually either in debug or with other mods), but still reduces moves to 0 as usual
                            formula="moves >= max_moves"
                            [filter_adjacent]
                                x,y=$x1,$y1
                            [/filter_adjacent]
                        [/filter]
                        variable=able_to_upgrade
                    [/store_unit]

                    #handle selections
                    {IF_VAR able_to_upgrade.length greater_than 1 (
                        [then]
                            # Branch 1
                            [store_unit]
                                [filter]
                                    id=$last_selected_unit.id
                                    find_in=able_to_upgrade
                                [/filter]
                                variable=upgrader_selected
                            [/store_unit]
                        [/then]
                        [else]
                            # Branch 2
                            [store_unit]
                                [filter]
                                    id=$able_to_upgrade.id
                                [/filter]
                                variable=upgrader_selected
                            [/store_unit]
                        [/else]
                    )}
                    # upgrader_selected empty if there are several options,
                    # yet the player has not manually selected any of them.
                    {IF_VAR upgrader_selected.id equals $empty (
                        [then]
                            [store_unit]
                                [filter]
                                    id=$able_to_upgrade[0].id
                                [/filter]
                                variable=last_selected_unit
                            [/store_unit]
                        [/then]
                        [else]
                            # Update last_selected_unit if the only possible upgrader was chosen above (Branch 2)
                            # Otherwise, no-op (Branch 1).
                            [store_unit]
                                [filter]
                                    id=$upgrader_selected.id
                                [/filter]
                                variable=last_selected_unit
                            [/store_unit]
                        [/else]
                    )}

                    # Effects on the upgrader
                    {VARIABLE last_selected_unit.attacks_left 0}
                    {VARIABLE last_selected_unit.moves 0}
                    {VARIABLE_OP last_selected_unit.experience add 3}

                    [unstore_unit]
                        variable=last_selected_unit
                        find_vacant=no
                        text= _ "+3 exp"
                        red,green,blue=50,50,200
                    [/unstore_unit]
                [/then]
                [else]
                    [message]
                        speaker=narrator
                        side_for=$side_number
                        caption=_ "Error"
                        message= _ "You don't have enough gold!"
                        image=wesnoth-icon.png
                    [/message]
                [/else]
            )}
            {CLEAR_VARIABLE actualgold}
        [/command]
    [/set_menu_item]
    [allow_undo]
    [/allow_undo]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef
