#textdomain wesnoth-Era_of_Magic

#define WEAPON_SPECIAL_EOMA_ATTACK_ONLY
    [disable]
        id=eoma_attack_only
        name= _ "attack only"
        description= _ "This weapon will never be used on defense."
        active_on=defense
    [/disable]
#enddef

#define ABILITY_EOMA_KAMIKAZE
    [dummy]
        id=eoma_kamikaze
        name= _ "kamikaze"
        description=_"This unit always hits a target when attacking, but dies instantly afterwards."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]

[event]
    name=attack_end
    id=eoma_kamikaze_event
    first_time_only=no
    [filter]
        ability=eoma_kamikaze
        x,y=$x1,$y1
    [/filter]
    [filter_second]
        [not]
            find_in=awake_candidates
        [/not]
    [/filter_second]
    [kill]
        x,y=$x1,$y1
        animate=no
        fire_event=yes
    [/kill]
[/event]

#kamikaze edge case
[event]
    name=attack_end
    id=eoma_kamikaze_event2
    first_time_only=no
    [filter]
        ability=eoma_kamikaze
        x,y=$x1,$y1
    [/filter]
    [filter_second]
        find_in=awake_candidates
    [/filter_second]
    [kill]
        x,y=$x1,$y1
        animate=no
        fire_event=yes
    [/kill]
    #fire helper event
    [fire_event]
        name=eoma_awake_kamikaze
        [primary_unit]
            x,y=$x2,$y2
        [/primary_unit]
    [/fire_event]
[/event]

[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_HITANDRUN VALUE
    [dummy]
        id=eoma_hitandrun{VALUE}
        name= _ "hit and run"+" "+"+"+{VALUE}
        description=_"This unit gains additional moves back after attacking, but cannot attack again."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=attack_end
    id=eoma_hitandrun_event{VALUE}
    first_time_only=no
    [filter]
        x,y=$x1,$y1
        ability=eoma_hitandrun{VALUE}
    [/filter]
    {VARIABLE_OP unit.moves add {VALUE}}
    [unstore_unit]
        variable=unit
        {COLOR_HEAL}
        text="+"+{VALUE}+" "+_"movepoints"
        find_vacant=no
    [/unstore_unit]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_KILLANDRUN VALUE
    [dummy]
        id=eoma_killandrun{VALUE}
        name= _ "kill and run"+" "+"+"+{VALUE}
        description=_"This unit gains additional moves back after eliminating an opponent, but cannot attack again."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
    id=eoma_killandrun_event{VALUE}
    first_time_only=no
    [filter]
    [/filter]
    [filter_second]
        ability=eoma_killandrun{VALUE}
    [/filter_second]
    {VARIABLE_OP second_unit.moves add {VALUE}}
    [unstore_unit]
        variable=second_unit
        {COLOR_HEAL}
        text="+"+{VALUE}+" "+_"movepoints"
        find_vacant=no
    [/unstore_unit]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_EOMA_HITANDRUN VALUE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=eoma_hitandrunspecial{VALUE}
        name= _ "hit and run"+" "+"+"+{VALUE}
        description=_"This unit gains additional moves back after attacking with this weapon, but cannot attack again."
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
[event]
    name=attack_end
    id=eoma_hitandrunspecial_event{VALUE}
    first_time_only=no
    [filter_attack]
        special_id=eoma_hitandrunspecial{VALUE}
    [/filter_attack]
    {VARIABLE_OP unit.moves add {VALUE}}
    [unstore_unit]
        variable=unit
        {COLOR_HEAL}
        text="+"+{VALUE}+" "+_"movepoints"
        find_vacant=no
    [/unstore_unit]
[/event]
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#define ABILITY_EOMA_FURY
    [dummy]
        id=eoma_fury
        name= _ "fury"
        description=_"This unit can attack another unit after killing an enemy."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
    id=eoma_fury_event
    first_time_only=no
    [filter_second]
        side=$side_number
        ability=eoma_fury
    [/filter_second]

    {VARIABLE_OP second_unit.attacks_left add 1}
    [unstore_unit]
        variable=second_unit
        {COLOR_HARM}
        text= _ "FURY!"
        find_vacant=no
    [/unstore_unit]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_FURIOUSDEATH DMG TYPE
    [dummy]
        id=eoma_furiousdeath{DMG}{TYPE}
        name= _ "furious death"+" ("+{DMG}+")"
        description=_"Moments before this unit's death, it flies into a fury, dealing some impact damage to adjacent units, friend or foes alike. When a harmed adjacent unit goes to or below 0 HP, its HP are set to 1 instead of being killed.
The amount of damage dealt:"+" "+{DMG}
    [/dummy] # wmlxgettext: [abilities]
[/abilities]

[event]
    name=die
    id=eoma_furiousdeath_{DMG}{TYPE}
    first_time_only=no
    [filter]
        ability=eoma_furiousdeath{DMG}{TYPE}
    [/filter]

    {VARIABLE furydamage {DMG}}
    [if]
        {VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
        [then]
            {VARIABLE_OP furydamage divide 2}
            {VARIABLE_OP furydamage round floor}
        [/then]
    [/if]

    [harm_unit]
        [filter]
            formula="hitpoints > 0" # for situation where another area damage would kill unit, but then death damage set it to 1hp
            [filter_adjacent]
                x,y=$x1,$y1
            [/filter_adjacent]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        amount=$furydamage
        alignment=$unit.alignment
        damage_type={TYPE}
        fire_event=yes
        kill=no
        animate=yes
        delay=0
        experience=no
    [/harm_unit]

    {CLEAR_VARIABLE furydamage}
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_HARDLANDING DMG TYPE
    [dummy]
        id=eoma_hardlanding{DMG}{TYPE}
        name= _ "hard landing"+" ({DMG})"
        description=_"When this large unit is destroyed, it falls on a ground dealing damage to all adjacent units. When a harmed adjacent unit goes to or below 0 HP, its HP are set to 1 instead of being killed."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
    id=eoma_hardlanding_event{DMG}{TYPE}
    first_time_only=no
    [filter]
        ability=eoma_hardlanding{DMG}{TYPE}
    [/filter]

    [harm_unit]
        [filter]
            formula="hitpoints > 0" # for situation where another area damage would kill unit, but then death damage set it to 1hp
            [and]
                [filter_adjacent]
                    x,y=$x1,$y1
                [/filter_adjacent]
            [/and]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
            [not]
                find_in=parachutist
            [/not]
        [/filter]
        amount={DMG}
        damage_type={TYPE}
        fire_event=yes
        kill=no
        animate=yes
        delay=0
        experience=no
    [/harm_unit]
    {CLEAR_VARIABLE parachutist}
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_PARACHUTE
    [dummy]
        id=eoma_parachute
        name= _ "parachute"
        description=_"The pilot of this machine is equipped with a parachute, and he can survive the destruction of his vehicle, continuing to fight as a lvl0 unit."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
    id=eoma_parachute_event
    first_time_only=no
    [filter]
        ability=eoma_parachute
    [/filter]
    [item]
        x,y=$x1,$y1
        image=scenery/wreck-burning-eoma.png
        halo=scenery/flames[01~15].png~FL(horiz):50
    [/item]
    [unit]
        type=EoMa_Parachutist
        side=$unit.side
        x,y=$x1,$y1
        moves=0
        to_variable=parachutist
    [/unit]
    [unstore_unit]
        variable=parachutist
        find_vacant=yes
        animate=yes
    [/unstore_unit]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#----------------------------------------------------
#define WEAPON_SPECIAL_EOMA_AREAEFFECTRANDOM CHANCETOHIT
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=eoma_areaeffectrandom_{CHANCETOHIT}
        name= _ "random area effect"
        active_on=offense
        description=_"When this attack is used, random units adjacent to the target (except the attacker) get half of the basic damage.
This effect works only on offence.
This ability works even against allies.
Secondary target may be hit even when primary attack misses.
Chance to hit secondary target: " + {CHANCETOHIT} + "%"+" "+{EOMA_NO_RPG}
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
[event]
    name=attacker_hits,attacker_misses
    id=eoma_areaeffect_event_{CHANCETOHIT}
    first_time_only=no
    [filter_attack]
        special_id=eoma_areaeffectrandom_{CHANCETOHIT}
    [/filter_attack]
#ifdef MULTIPLAYER
    [filter_condition]
        [EoMa_not_rpg]
        [/EoMa_not_rpg]
    [/filter_condition]
#endif

    {VARIABLE halfdmg $weapon.damage}
    {VARIABLE_OP halfdmg divide 2}
    {VARIABLE_OP halfdmg round floor}

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x2,$y2
            [/filter_adjacent]
            [not]
                x,y=$x1,$y1
            [/not]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    [foreach]
        array=bystander
        [do]
            {RANDOM 1..100}
            [if]
                {VARIABLE_CONDITIONAL random less_than_equal_to {CHANCETOHIT}}
                [then]
                    [EoMa_remember_indirectly_damaged_unit]
                        x,y=$this_item.x,$this_item.y
                    [/EoMa_remember_indirectly_damaged_unit]
                    [harm_unit]
                        [filter]
                            x,y=$this_item.x,$this_item.y
                            [filter_side]
                                [enemy_of]
                                    side=$unit.side
                                [/enemy_of]
                            [/filter_side]
                            [not]
                                [filter_wml]
                                    [status]
                                        petrified=yes
                                    [/status]
                                [/filter_wml]
                            [/not]
                        [/filter]
                        [filter_second]
                            x,y=$x1,$y1
                        [/filter_second]
                        amount=$halfdmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
                        delay=0
                        experience=no
                    [/harm_unit]
                    [harm_unit]
                        [filter]
                            x,y=$this_item.x,$this_item.y
                            [filter_side]
                                [allied_with]
                                    side=$unit.side
                                [/allied_with]
                                [or]
                                    side=$unit.side
                                [/or]
                            [/filter_side]
                            [not]
                                [filter_wml]
                                    [status]
                                        petrified=yes
                                    [/status]
                                [/filter_wml]
                            [/not]
                        [/filter]
                        [filter_second]
                            x,y=$x1,$y1
                        [/filter_second]
                        amount=$halfdmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
                        kill=no
                        delay=0
                        experience=no
                    [/harm_unit]
                    [EoMa_trigger_pain_absorbation_aura_on_location]
                        x,y=$this_item.x,$this_item.y
                        #in pain absorb event, primary unit should be the damaged unit
                        #                        primary_unit=$unit.id
                        primary_unit=$this_item.id
                    [/EoMa_trigger_pain_absorbation_aura_on_location]
                [/then]
            [/if]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE halfdmg}
    {CLEAR_VARIABLE bystander}
[/event]

{EOMA_INDIRECTLY_DAMAGED_UNIT_EXPERIENCE_EVENT}
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#non-random variant of area effect, used for units where it does not make sense to damage enemies on miss

#define WEAPON_SPECIAL_EOMA_AREAEFFECT
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=eoma_areaeffect
        name= _ "area effect"
        description=_"When this attack hits an enemy, units adjacent to the target (except the attacker) get half of the basic damage.
This effect works only on offence.
This ability works even against allies."
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
[event]
    name=attacker_hits
    id=eoma_areaeffect_event
    first_time_only=no
    [filter_attack]
        special_id=eoma_areaeffect
    [/filter_attack]
#ifdef MULTIPLAYER
    [filter_condition]
        [EoMa_not_rpg]
        [/EoMa_not_rpg]
    [/filter_condition]
#endif

    {VARIABLE halfdmg $weapon.damage}
    {VARIABLE_OP halfdmg divide 2}
    {VARIABLE_OP halfdmg round floor}

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x2,$y2
            [/filter_adjacent]
            [not]
                x,y=$x1,$y1
            [/not]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    [foreach]
        array=bystander
        [do]
            [EoMa_remember_indirectly_damaged_unit]
                x,y=$this_item.x,$this_item.y
            [/EoMa_remember_indirectly_damaged_unit]
            [harm_unit]
                [filter]
                    x,y=$this_item.x,$this_item.y
                    [filter_side]
                        [enemy_of]
                            side=$unit.side
                        [/enemy_of]
                    [/filter_side]
                    [not]
                        [filter_wml]
                            [status]
                                petrified=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                [/filter]
                [filter_second]
                    x,y=$x1,$y1
                [/filter_second]
                amount=$halfdmg
                damage_type=$weapon.type
                alignment=$unit.alignment
                fire_event=yes
                animate=defender
                delay=0
                experience=no
            [/harm_unit]
            [harm_unit]
                [filter]
                    x,y=$this_item.x,$this_item.y
                    [filter_side]
                        [allied_with]
                            side=$unit.side
                        [/allied_with]
                        [or]
                            side=$unit.side
                        [/or]
                    [/filter_side]
                    [not]
                        [filter_wml]
                            [status]
                                petrified=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                [/filter]
                [filter_second]
                    x,y=$x1,$y1
                [/filter_second]
                amount=$halfdmg
                damage_type=$weapon.type
                alignment=$unit.alignment
                fire_event=yes
                animate=defender
                kill=no
                delay=0
                experience=no
            [/harm_unit]
            [EoMa_trigger_pain_absorbation_aura_on_location]
                x,y=$this_item.x,$this_item.y
                #in pain absorb event, primary unit should be the damaged unit
                #               primary_unit=$unit.id
                primary_unit=$this_item.id
            [/EoMa_trigger_pain_absorbation_aura_on_location]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE halfdmg}
    {CLEAR_VARIABLE bystander}
[/event]

{EOMA_INDIRECTLY_DAMAGED_UNIT_EXPERIENCE_EVENT}
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#----------------------------------------------------

#define WEAPON_SPECIAL_EOMA_SWALLOW VALUE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=eoma_swallow{VALUE}
        name= _ "swallow"+" +"+"{VALUE}"
        description=_"When killing a living enemy, this unit is healed by "+{VALUE}+" "+{EOMA_NO_RPG}
    [/dummy]
    [dummy]
        #used by awaken
        id=eoma_swallow_filter
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
[event]
    name=die
    id=eoma_swallow_event{VALUE}
    first_time_only=no
    [filter_condition]
#ifdef MULTIPLAYER
        [EoMa_not_rpg]
        [/EoMa_not_rpg]
#endif
    [/filter_condition]
    [filter]
        [not]
            [filter_wml]
                [status]
                    not_living="yes"
                [/status]
            [/filter_wml]
        [/not]
    [/filter]

    [filter_second_attack]
        special_id=eoma_swallow{VALUE}
    [/filter_second_attack]

    [heal_unit]
        [filter]
            x,y=$x2,$y2
        [/filter]
        amount={VALUE}
        animate=yes
        restore_statuses=no
    [/heal_unit]
[/event]

[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#define WEAPON_SPECIAL_EOMA_COLLECTOR VALUE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=eoma_collector{VALUE}
        name= _ "collector"+" +"+"{VALUE}"
        description=_"This unit gains some HP added to its current health whenever it kills a non-magical unit. It also gains +1 max HP with each successful kill of a non-magical unit.

The amount of hitpoints gained:"+" +"+{VALUE}+" "+{EOMA_NO_RPG}
        active_on=offense
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

[event]
    name=die
    id=eoma_collector_event{VALUE}
    first_time_only=no
    [filter_condition]
#ifdef MULTIPLAYER
        [EoMa_not_rpg]
        [/EoMa_not_rpg]
#endif
    [/filter_condition]
    [filter]
        [not]
            race=eoma_magical
            [or]
                #do not gain max hp from kills against awakened
                find_in=awake_candidates
            [/or]
        [/not]
    [/filter]

    [filter_second_attack]
        special_id=eoma_collector{VALUE}
    [/filter_second_attack]

    #increase max hp
    [object]
        silent=yes
        duration=forever
        [filter]
            id=$second_unit.id
        [/filter]
        [effect]
            apply_to=hitpoints
            increase_total=1
            heal_full=no
        [/effect]
    [/object]
    [floating_text]
        x,y=$x2,$y2
        text="<span color='#00ff00'>"+_"+1 max hp"+"</span>"
    [/floating_text]
    [delay]
        time=400
    [/delay]

    [heal_unit]
        [filter]
            x,y=$x2,$y2
        [/filter]
        amount={VALUE}
        animate=yes
        restore_statuses=no
    [/heal_unit]
    {CLEAR_VARIABLE eoma_collector_offensive}
[/event]

[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#define ABILITY_EOMA_SPLIT TYPE
    [dummy]
        id=eoma_split
        name= _ "split"
        description=_"When dying this unit splits into 2 smaller versions of itself."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
    id=eoma_split
    first_time_only=no
    [filter]
        ability=eoma_split
    [/filter]
    [unit]
        type={TYPE}
        side=$unit.side
        x,y=$x1,$y1
        moves=0
        animate=no
    [/unit]
    [unit]
        type={TYPE}
        side=$unit.side
        x,y=$x1,$y1
        moves=0
        animate=no
    [/unit]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_EOMA_ANTISHIELD
    [dummy]
        id=eoma_antishield
        name= _ "anti-shield"
        description=_"This attack negates all possible resistances, thus the damage output is always constant (unless the opponent has the 'secret shield' ability)."
    [/dummy]
#enddef

#define ABILITY_EOMA_SECRETSHIELD VALUE
    [dummy]
        id=eoma_secretshield{VALUE}
        name= _ "secret shield"+" ("+{VALUE}+"%)"
        description=_"This unit has some level of resistance against attacks dealing secret type of damage."
    [/dummy]
#enddef

#define ABILITY_EOMA_POISONOUS_AURA
    [dummy]
        id=eoma_poisonousaura
        name= _ "poisonous aura"
        description=_"All living non-magical enemy units adjacent to this unit lose 2 HP and become poisoned at the beginning of this unit's turn. If an enemy unit's HP goes to or below 0 HP, its HP are set to 1."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=turn refresh
    id=eoma_poisonousaura
    first_time_only=no

    [store_unit]
        [filter]
            type=EoMa_Chosen_of_Marsh
            side=$side_number
        [/filter]
        variable=com
    [/store_unit]

    [foreach]
        array=com
        [do]
            [animate_unit]
                flag=poisonaura
                [filter]
                    id=$this_item.id
                [/filter]
            [/animate_unit]

            [harm_unit]
                [filter]
                    [filter_adjacent]
                        id=$this_item.id
                        is_enemy=yes
                    [/filter_adjacent]
                    [not]
                        [filter_wml]
                            [status]
                                petrified=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                    [not]
                        status=unpoisonable
                    [/not]
                [/filter]
                amount=2
                fire_event=yes
                animate=no
                kill=no
                poisoned=yes
            [/harm_unit]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE com}
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_ALTER_EGO ID DAY_TYPE NIGHT_TYPE
    [dummy]
        id=eoma_alterego#purely visual, does not have {ID} to ensure units with the ability are grouped together in description
        name= _ "alter ego"
        description=_"At night this unit transforms into its alternative version."
    [/dummy]
    #added just in case there is ever a need to actually filter by ability:
    [dummy]
        id=eoma_alterego2_{ID}
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=turn refresh
    id=eoma_alterego_{ID}
    first_time_only=no

    {TRANSFORM_UNIT (
        type={DAY_TYPE}
        [filter_location]
            #if ToD uses mainline schedules, check by ToD id regardless of tile illumination
            time_of_day_id=first_watch,second_watch,underground,deep_underground
            [or]
                #if ToD is not a mainline schedule, check whether the tile has chaotic ToD as a workaround
                #note: this workaround means that ToD-bonus-affecting abilities like darken WILL affect the transformation in this case. However, such edge cases are still better than transformations not triggering at all.
                time_of_day=chaotic
                [not]
                    time_of_day_id=first_watch,second_watch,underground,deep_underground
                [/not]
            [/or]
        [/filter_location]
    ) {NIGHT_TYPE}}

    {TRANSFORM_UNIT (
        type={NIGHT_TYPE}
        [filter_location]
            #if ToD uses mainline schedules, check by ToD id regardless of tile illumination
            time_of_day_id=dawn,dusk,morning,afternoon
            [or]
                #if ToD is not a mainline schedule, check whether the tile has lawful or neutral ToD as a workaround
                #note: this workaround means that ToD-bonus-affecting abilities like illuminates WILL affect the transformation in this case. However, such edge cases are still better than transformations not triggering at all.
                [not]
                    time_of_day_id=dawn,dusk,morning,afternoon
                [/not]
                [and]
                    time_of_day=lawful
                    [or]
                        time_of_day=neutral
                    [/or]
                [/and]
            [/or]
        [/filter_location]
    ) {DAY_TYPE}}
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_DAMAGEAURA VALUE TYPE ALIGNMENT
    [dummy]
        id=eoma_damageaura{VALUE}
        name= _ "damage aura"+" ({VALUE})"
        description=_"This unit harms all adjacent enemies at the start of each turn by a certain amount of damage (affected by the ToD bonus), giving the unit experience for each enemy harmed/killed."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=side turn
    id={TYPE}_damageaura
    first_time_only=no

    [store_unit]
        [filter]
            type={TYPE}
            side=$side_number
        [/filter]
        variable={TYPE}
    [/store_unit]

    [foreach]
        array={TYPE}
        [do]
            [harm_unit]
                [filter]
                    [filter_adjacent]
                        x,y=$this_item.x,$this_item.y
                    [/filter_adjacent]
                    [not]
                        side=$side_number|
                        [or]
                            [filter_side]
                                [allied_with]
                                    side=$side_number
                                [/allied_with]
                            [/filter_side]
                        [/or]
                    [/not]
                    [not]
                        [filter_wml]
                            [status]
                                petrified=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                [/filter]
                [filter_second]
                    id=$this_item.id
                [/filter_second]
                [primary_attack]
                    name=aura
                [/primary_attack]
                amount={VALUE}
                alignment={ALIGNMENT}
                damage_type=secret
                experience=yes
                fire_event=yes
                animate=yes
            [/harm_unit]
            [store_unit]
                [filter]
                    [filter_adjacent]
                        x,y=$this_item.x,$this_item.y
                    [/filter_adjacent]
                    [filter_side]
                        [enemy_of]
                            side=$side_number
                        [/enemy_of]
                    [/filter_side]
                    [not]
                        [filter_wml]
                            [status]
                                petrified=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                [/filter]
                variable=expsub
            [/store_unit]
            {IF_VAR expsub.length greater_than 0 (
                [then]
                    {VARIABLE_OP expsub.experience sub $this_item.level}
                    [unstore_unit]
                        variable=expsub
                        find_vacant=no
                    [/unstore_unit]
                [/then]
            )}
        [/do]
    [/foreach]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_ZOMBIE_DAMAGEAURA VALUE VARIATION
    [dummy]
        id=lesser_eoma_damageaura{VALUE}
        name= _ "lesser damage aura"+" "+{VALUE}
        description=_"This unit harms all adjacent enemies at the start of each turn by a certain amount of damage (affected by the ToD bonus), without giving the unit experience for each enemy harmed. Like poison, it can't kill."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=side turn
    id={VARIATION}_damageaura_lesser
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            ability=lesser_eoma_damageaura{VALUE}
        [/filter]
        variable={VARIATION}
    [/store_unit]

    [foreach]
        array={VARIATION}
        [do]
            [harm_unit]
                [filter]
                    [filter_adjacent]
                        x,y=$this_item.x,$this_item.y
                    [/filter_adjacent]
                    [not]
                        side=$side_number|
                        [or]
                            [filter_side]
                                [allied_with]
                                    side=$side_number
                                [/allied_with]
                            [/filter_side]
                        [/or]
                    [/not]
                    [not]
                        [filter_wml]
                            [status]
                                petrified=yes
                            [/status]
                        [/filter_wml]
                    [/not]
                [/filter]
                [filter_second]
                    id=$this_item.id
                [/filter_second]
                [primary_attack]
                    name=aura
                [/primary_attack]
                amount={VALUE}
                alignment=chaotic
                damage_type=secret
                experience=no
                fire_event=yes
                kill=no
                animate=yes
            [/harm_unit]
        [/do]
    [/foreach]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define IMMOBILIZE_MOVE_COST VALUE
    [effect]
        apply_to=movement_costs
        replace=no
        [movement_costs]
            deep_water={VALUE}
            shallow_water={VALUE}
            swamp_water={VALUE}
            reef={VALUE}
            flat={VALUE}
            sand={VALUE}
            forest={VALUE}
            hills={VALUE}
            mountains={VALUE}
            village={VALUE}
            castle={VALUE}
            cave={VALUE}
            frozen={VALUE}
            unwalkable={VALUE}
            fungus={VALUE}
        [/movement_costs]
    [/effect]
#enddef

#define WEAPON_SPECIAL_EOMA_IMMOBILIZE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=eoma_immoblize
        name= _ "immobilize"
        description=_"When used offensively, units hit with this attack become unable to move for 1 turn"
    [/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
[event]
    name=attacker hits
    id=eoma_immobilize_event
    first_time_only=no
    [filter_second]
        [not]
            ability=eoma_immobilized_dummy
        [/not]
    [/filter_second]
    [filter_attack]
        special_id=eoma_immoblize
    [/filter_attack]

    #heavily simplified immobilize code, this also fixes the "immobilize does not work if side 2 immobilizes side 1 unit" (or any other side with higher number immobilizing a unit from lower side)

    [object]
        silent=yes
        duration=turn end
        [filter]
            find_in=second_unit
        [/filter]
        [effect]
            apply_to=new_ability
            [abilities]
                [dummy]
                    id=eoma_immobilized_dummy
                [/dummy]
            [/abilities]
        [/effect]
        {IMMOBILIZE_MOVE_COST 99}
    [/object]
[/event]
[+attack]
[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
#enddef

#define DAZZLE_DEFENSE VALUE
                    [effect]
                        apply_to=defense
            replace=no
              [defense]
            deep_water={VALUE}
                shallow_water={VALUE}
                swamp_water={VALUE}
                reef={VALUE}
                flat={VALUE}
                sand={VALUE}
                forest={VALUE}
                hills={VALUE}
                mountains={VALUE}
                village={VALUE}
                castle={VALUE}
                cave={VALUE}
                frozen={VALUE}
                unwalkable={VALUE}
                fungus={VALUE}
              [/defense]
                    [/effect]
#enddef

#define WEAPON_SPECIAL_EOMA_DAZZLE
# wmlxgettext: [attack]
# wmlxgettext: [specials]

[dummy]
    id=eoma_dazzle
    name= _ "dazzle"
    description=_"When used offensively, units hit with this attack suffer a 35% reduction in damage and a 10% reduction in defenses for 1 turn"
[/dummy]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
[event]
    name=attacker hits
    id=eoma_dazzle_event
    first_time_only=no
    [filter_second]
        [not]
            ability=dazzled
        [/not]
    [/filter_second]
    [filter_attack]
        special_id=eoma_dazzle
    [/filter_attack]

    # Record information about the dazzling
    [set_variables]
        name=dazzle_unit_information
        mode=append
        [value]
            id=$second_unit.id
            side=$second_unit.side
            turn_of_undazzle=$"($turn_number| + 1)"
        [/value]
    [/set_variables]
    {MODIFY_UNIT id=$second_unit.id status.dazzled yes}
    [object]
        silent=yes
        [filter]
            find_in=second_unit
        [/filter]
        {DAZZLE_DEFENSE 10}
        [effect]
            apply_to=new_ability
            [abilities]
                [leadership]
                    id=dazzled
                    value=-30
                    cumulative=no
                    affect_self=yes
                [/leadership]
            [/abilities]
        [/effect]
    [/object]
[/event]
[event]
    name=side turn
    id=eoma_dazzle_event2
    first_time_only=no

    [foreach]
        array=dazzle_unit_information
        [do]
            [if]
                [variable]
                    name=this_item.turn_of_mobilizing
                    less_than_equal_to=$turn_number
                [/variable]
                [and]
                    [variable]
                        name=this_item.side
                        equals=$side_number
                    [/variable]
                [/and]

                [then]
                    [object]
                        silent=yes
                        [filter]
                            find_in=this_item
                        [/filter]
                        {DAZZLE_DEFENSE -10}
                        [effect]
                            apply_to=remove_ability
                            [abilities]
                                [leadership]
                                    id=dazzled
                                    value=-30
                                    cumulative=no
                                    affect_self=yes
                                [/leadership]
                            [/abilities]
                        [/effect]
                    [/object]
                    {MODIFY_UNIT id=$this_item.id status.dazzled no}

                    [clear_variable]
                        name=this_item
                    [/clear_variable]
                [/then]
            [/if]
        [/do]
    [/foreach]
[/event]

[event]
    name=victory
    id=eoma_dazzle_event3
    first_time_only=no

    [foreach]
        array=dazzle_unit_information
        [do]
            [object]
                silent=yes
                [filter]
                    find_in=this_item
                [/filter]
                {DAZZLE_DEFENSE -99}
                [effect]
                    apply_to=remove_ability
                    [abilities]
                        [leadership]
                            id=dazzled
                            value=-30
                            cumulative=no
                            affect_self=yes
                        [/leadership]
                    [/abilities]
                [/effect]
            [/object]
            {MODIFY_UNIT id=$this_item.side.id status.dazzled no}

            [clear_variable]
                name=this_item
            [/clear_variable]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE dazzle_unit_information}
[/event]
[+attack]
    [+specials]
        # wmlxgettext: [/specials]
        # wmlxgettext: [/attack]
#enddef

#taken from EFM
#define WEAPON_SPECIAL_EOMA_STUN
    [dummy]
        id=eoma_stun
        name= _ "stun"
        description= _ "This attack puts enormous pressure on the enemy, disrupting his ZOC if a hit is landed. Not active on defense. Does not work on units that do not have a ZoC."
        apply_to=opponent
        active_on=offense
    [/dummy]
    # wmlxgettext: [specials]
[/specials]
# wmlxgettext: [attack]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

[event]
    name=attacker_hits
    id=eoma_stun_event1
    first_time_only=no
    [filter_attack]
        special_id=eoma_stun
    [/filter_attack]
    [filter_second]
        [not]
            [filter_wml]
                zoc=no
            [/filter_wml]
        [/not]
    [/filter_second]

    [if]
        [variable]
            name=second_unit.variables.stunned
            boolean_equals=no
        [/variable]
        [then]
            {VARIABLE second_unit.variables.stunned yes}

            [unstore_unit]
                variable=second_unit
                find_vacant=no
                text=_ "stunned"
                red,green,blue=196,196,128
            [/unstore_unit]

            [object]
                silent=yes
                duration=scenario

                [filter]
                    x,y=$x2,$y2
                [/filter]

                [effect]
                    apply_to=image_mod
                    replace="CS(50,50,0)"
                [/effect]

                [effect]
                    apply_to=zoc
                    value=no
                [/effect]
            [/object]
        [/then]
    [/if]
[/event]

[event]
    name=turn refresh
    id=eoma_stun_event2
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            [filter_wml]
                [variables]
                    stunned=yes
                [/variables]
            [/filter_wml]
        [/filter]
        variable=stunned
    [/store_unit]

    [foreach]
        array=stunned
        [do]
            {VARIABLE this_item.variables.stunned no}

            [unstore_unit]
                variable=this_item
            [/unstore_unit]

            [object]
                silent=yes
                duration=scenario

                [filter]
                    x,y=$this_item.x,$this_item.y
                [/filter]

                [effect]
                    apply_to=image_mod
                    replace="NOP()"
                [/effect]

                [effect]
                    apply_to=zoc
                    value=yes
                [/effect]
            [/object]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE stunned}
[/event]

[+attack]
    # wmlxgettext: [/attack]
    [+specials]
        # wmlxgettext: [/specials]

#enddef

#define ABILITY_EOMA_BLOODLUST VALUE
    [dummy]
        id=eoma_bloodlust{VALUE}
        name= _ "bloodlust"+" +"+{VALUE}
        description=_"This unit gains hitpoints added to its current health whenever it kills a living unit. This ability works only on offense.
The amount of hitpoints gained:"+" +"+{VALUE}
        active_on=offense
    [/dummy] # wmlxgettext: [abilities]
[/abilities]

[event]
    name=die
    id=eoma_bloodlust_event2_{VALUE}
    first_time_only=no

    [filter]
        [not]
            status=undrainable
        [/not]
    [/filter]
    [filter_second]
        ability=eoma_bloodlust{VALUE}
        #instead of variables, the "only works in offense" check is now done by checking unit side
        side=$side_number
    [/filter_second]

    [delay]
        time=100
    [/delay]
    [heal_unit]
        [filter]
            id=$second_unit.id
        [/filter]
        amount={VALUE}
        animate=yes
        restore_statuses=no
    [/heal_unit]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_EOMA_SUPERCHARGE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=eoma_supercharge
        name= _ "supercharge"
        description= _ "When used offensively, this attack deals 150% damage to the target. It also causes this unit to take 150% damage from the target’s counterattack.

When the opponent is defeated, the attacker with this ability moves to the opponent's location."
        multiply=1.5
        apply_to=both
        active_on=offense
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
[event]
    name=die
    id=eoma_supercharge_event
    first_time_only=no
#ifver WESNOTH_VERSION >= 1.17.20
    #load after most other die events to avoid bugs
    priority=-50
#endif

    [filter_second_attack]
        special_id=eoma_supercharge
    [/filter_second_attack]

    [kill]
        find_in=unit
        animate=no
        fire_event=yes
    [/kill]

    {MOVE_UNIT id=$second_unit.id $unit.x $unit.y}

    [switch]
        variable=unit.level
        [case]
            value=0
            {VARIABLE exp_fix 4}
            {VARIABLE_OP exp_fix add $second_unit.experience}
            {MODIFY_UNIT find_in=second_unit experience $exp_fix}
        [/case]
        [else]
            {VARIABLE exp_fix 8}
            {VARIABLE_OP exp_fix multiply $unit.level}
            {VARIABLE_OP exp_fix add $second_unit.experience}
            {MODIFY_UNIT find_in=second_unit experience $exp_fix}
        [/else]
    [/switch]

    #if supercharging onto a village, capture that village and fire a capture event for good measure
    [capture_village]
        side=$second_unit.side
        x,y=$unit.x,$unit.y
        fire_event=yes
    [/capture_village]
    #fire moveto events when supercharging
    [fire_event]
        name=moveto
        [primary_unit]
            x,y=$unit.x,$unit.y
        [/primary_unit]
    [/fire_event]
[/event]

[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#define ABILITY_EOMA_SCAVENGER VALUE
    [dummy]
        id=eoma_scavenger{VALUE}
        name= _ "scavenger"+" +"+{VALUE}
        description=_"This unit gains some hitpoints added to its current health whenever an adjacent unit dies.
The amount of hitpoints gained:"+" +"+{VALUE}+" "+{EOMA_NO_RPG}
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
    id=eoma_scavenger_event_{VALUE}
    first_time_only=no
    [filter_condition]
#ifdef MULTIPLAYER
        [EoMa_not_rpg]
        [/EoMa_not_rpg]
#endif
    [/filter_condition]
    [filter]
        [filter_adjacent]
            ability=eoma_scavenger{VALUE}
        [/filter_adjacent]
        [not]
            [filter_wml]
                [status]
                    not_living="yes"
                [/status]
            [/filter_wml]
        [/not]
    [/filter]

    [delay]
        time=100
    [/delay]
    [heal_unit]
        [filter]
            ability=eoma_scavenger{VALUE}
            [filter_adjacent]
                id=$unit.id
            [/filter_adjacent]
        [/filter]
        amount={VALUE}
        animate=yes
        restore_statuses=no
    [/heal_unit]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_EOMA_DREAD
    [damage]
        id=eoma_dread
        name= _ "dread"
        name_inactive= _ "dread"
        description=_"When this attack is used offensively, this unit takes one third less damage in retaliation."
        description_inactive=_"When this attack is used offensively, this unit takes one third less damage in retaliation."
        active_on=offense
        apply_to=opponent
        multiply=0.66
    [/damage]
#enddef

#define WEAPON_SPECIAL_EOMA_EVADE
    [damage]
        id=eoma_evade
        name= _ "evade"
        name_inactive= _ "evade"
        description=_"When this attack is used offensively, this unit takes 25% less damage in retaliation."
        description_inactive=_"When this attack is used offensively, this unit takes 25% less damage in retaliation."
        active_on=offense
        apply_to=opponent
        multiply=0.75
    [/damage]
#enddef

#define WEAPON_SPECIAL_EOMA_MAGIC_HARDENING
    [damage]
        id=eoma_magic_hardening
        multiply=0.8
        name= _ "magic hardening"
        description= _ "While attacking, this unit will take 20% less fire/cold/arcane damage in retaliation."
        apply_to=opponent
        active_on=offense
        [filter_opponent]
            [filter_weapon]
                type=fire,cold,arcane
            [/filter_weapon]
        [/filter_opponent]
    [/damage]
#enddef

#define ABILITY_EOMA_CHAOS_CHANNELLING
    [dummy]
        id=eoma_chaos_channeling
        name= _ "chaos channelling"
        description=_"When this unit dies a new Chaotic Observer unit is placed on the recall list of this unit's side."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
    id=chaos_channelling_event
    first_time_only=no

    [filter]
        type=EoMa_Dark_Portal,EoMa_Infernal_Vortex,EoMa_Black_Portal
    [/filter]

    [unit]
        side=$unit.side
        type=EoMa_Chaotic_Observer
        placement=recall
    [/unit]

    [floating_text]
        x,y=$unit.x,$unit.y
        text="<span color='red'>" + _ "Recalling..." + "</span>"
    [/floating_text]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_ILLUMINATES_WEAK
    [illuminates]
        id=eoma_illuminates_weak
        value=15
        max_value=25
        cumulative=no
        name= _ "illuminates (weak)"
        description= _ "This unit illuminates the surrounding area, making lawful units fight better, and chaotic units fight worse.

Unlike the 'illuminates' ability, this ability affects the damage bonus/penalty for adjacent units by 15%, instead of 25%."
        affect_self=yes
    [/illuminates]
#enddef

#define WEAPON_SPECIAL_EOMA_ANTIMECH VALUE
    [damage]
        id=eoma_antimech{VALUE}
        name= _ "anti-mech"+" +"+{VALUE}
        description=_"This attacks deals additional points of damage against mechanical units.
Additional damage dealt:"+" "+{VALUE}
        apply_to=self
        add={VALUE}
        [filter_opponent]
            race=mechanical
            [or]
                trait=mechanical
            [/or]
        [/filter_opponent]
    [/damage]
#enddef

#define WEAPON_SPECIAL_EOMA_DIVINE
    [disable]
        id=eoma_divine
        name= _ "divine"
        description= _ "This attack will only be used against monsters and undrainable units such as magical and undead beings."
        apply_to=self
        [filter_opponent]
            [not]
                race=monster
                [or]
                    status=undrainable
                [/or]
            [/not]
        [/filter_opponent]
    [/disable]
#enddef

#define WEAPON_SPECIAL_EOMA_SWIFTSTRIKE
    [attacks]
        id=eoma_swiftstrike
        name= _ "swift strike"
        description= _ "When this attack is used offensively, the attacker gets +1 bonus strike."
        apply_to=self
        active_on=offense
        add=1
    [/attacks]
#enddef

#define ABILITY_EOMA_PAIN_CHAINING
    [dummy]
        id=eoma_pain_chaining
        name= _ "pain chaining"
        description=_"When this unit attacks or is attacked, it reduces all physical resistances of all adjacent enemy units by 10%. This effect lasts only during active side's turn."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]

[event]
    name=attack
    id=eoma_pain_chaining_event
    first_time_only=no

    [filter]
        ability=eoma_pain_chaining
    [/filter]

    [animate_unit]
        flag=pain
        [filter]
            x,y=$x1,$y1
        [/filter]
    [/animate_unit]

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x1,$y1
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    [has_unit]
                        x,y=$x1,$y1
                    [/has_unit]
                [/enemy_of]
            [/filter_side]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    [foreach]
        array=bystander
        [do]
            [object]
                id=pain_chaining
                take_only_once=no
                silent=yes
                duration=turn
                [filter]
                    id=$this_item.id
                    [not]
                        [filter_wml]
                            [modifications]
                                [object]
                                    id=pain_chaining
                                [/object]
                            [/modifications]
                        [/filter_wml]
                    [/not]
                [/filter]
                [effect]
                    apply_to=resistance
                    replace=no
                    [resistance]
                        blade=10
                        pierce=10
                        impact=10
                    [/resistance]
                [/effect]
                [effect]
                    apply_to=image_mod
                    replace="CS(50,0,50)"
                [/effect]
            [/object]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE bystander}
[/event]

[event]
    name=attack
    id=eoma_pain_chaining_event2
    first_time_only=no

    [filter]
    [/filter]
    [filter_second]
        ability=eoma_pain_chaining
    [/filter_second]

    [animate_unit]
        flag=pain
        [filter]
            x,y=$x2,$y2
        [/filter]
    [/animate_unit]

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x2,$y2
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    [has_unit]
                        x,y=$x2,$y2
                    [/has_unit]
                [/enemy_of]
            [/filter_side]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    [foreach]
        array=bystander
        [do]
            [object]
                id=pain_chaining
                take_only_once=no
                silent=yes
                duration=turn
                [filter]
                    id=$this_item.id
                    [not]
                        [filter_wml]
                            [modifications]
                                [object]
                                    id=pain_chaining
                                [/object]
                            [/modifications]
                        [/filter_wml]
                    [/not]
                [/filter]
                [effect]
                    apply_to=resistance
                    replace=no
                    [resistance]
                        blade=10
                        pierce=10
                        impact=10
                    [/resistance]
                [/effect]
                [effect]
                    apply_to=image_mod
                    replace="CS(50,0,50)"
                [/effect]
            [/object]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE bystander}
[/event]

[event]
    name=side turn
    id=eoma_pain_chaining_event3
    first_time_only=no

    [remove_object]
        object_id=pain_chaining
    [/remove_object]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#stronger version of pain chaining, obtained via AMLA.

#define ABILITY_EOMA_PAIN_CHAINING2
    [dummy]
        id=eoma_pain_chainingII
        name= _ "pain chaining II"
        description=_"When this unit attacks or is attacked, it reduces all physical/magical resistances of all adjacent enemy units by 10%. This effect lasts only during active side's turn."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]

[event]
    name=attack
    id=eoma_pain_chainingII_event
    first_time_only=no

    [filter]
        ability=eoma_pain_chainingII
    [/filter]

    [animate_unit]
        flag=pain
        [filter]
            x,y=$x1,$y1
        [/filter]
    [/animate_unit]

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x1,$y1
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    [has_unit]
                        x,y=$x1,$y1
                    [/has_unit]
                [/enemy_of]
            [/filter_side]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    [foreach]
        array=bystander
        [do]
            [object]
                id=pain_chaining
                take_only_once=no
                silent=yes
                duration=turn
                [filter]
                    id=$this_item.id
                    [not]
                        [filter_wml]
                            [modifications]
                                [object]
                                    id=pain_chaining
                                [/object]
                            [/modifications]
                        [/filter_wml]
                    [/not]
                [/filter]
                [effect]
                    apply_to=resistance
                    replace=no
                    [resistance]
                        blade=10
                        pierce=10
                        impact=10
                    [/resistance]
                [/effect]
                [effect]
                    apply_to=image_mod
                    replace="CS(50,0,50)"
                [/effect]
            [/object]
            [object]
                id=pain_chaining_magic
                take_only_once=no
                silent=yes
                duration=turn
                [filter]
                    id=$this_item.id
                    [not]
                        [filter_wml]
                            [modifications]
                                [object]
                                    id=pain_chaining_magic
                                [/object]
                            [/modifications]
                        [/filter_wml]
                    [/not]
                [/filter]
                [effect]
                    apply_to=resistance
                    replace=no
                    [resistance]
                        arcane=10
                        fire=10
                        cold=10
                    [/resistance]
                [/effect]
                #not needed since image mod is applied in the physical version
                #                [effect]
                #                    apply_to=image_mod
                #                    replace="CS(50,0,50)"
                #                [/effect]
            [/object]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE bystander}
[/event]

[event]
    name=attack
    id=eoma_pain_chainingII_event2
    first_time_only=no

    [filter]
    [/filter]
    [filter_second]
        ability=eoma_pain_chaining
    [/filter_second]

    [animate_unit]
        flag=pain
        [filter]
            x,y=$x2,$y2
        [/filter]
    [/animate_unit]

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x2,$y2
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    [has_unit]
                        x,y=$x2,$y2
                    [/has_unit]
                [/enemy_of]
            [/filter_side]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    [foreach]
        array=bystander
        [do]
            [object]
                id=pain_chaining
                take_only_once=no
                silent=yes
                duration=turn
                [filter]
                    id=$this_item.id
                    [not]
                        [filter_wml]
                            [modifications]
                                [object]
                                    id=pain_chaining
                                [/object]
                            [/modifications]
                        [/filter_wml]
                    [/not]
                [/filter]
                [effect]
                    apply_to=resistance
                    replace=no
                    [resistance]
                        blade=10
                        pierce=10
                        impact=10
                    [/resistance]
                [/effect]
                [effect]
                    apply_to=image_mod
                    replace="CS(50,0,50)"
                [/effect]
            [/object]
            [object]
                id=pain_chaining_magic
                take_only_once=no
                silent=yes
                duration=turn
                [filter]
                    id=$this_item.id
                    [not]
                        [filter_wml]
                            [modifications]
                                [object]
                                    id=pain_chaining_magic
                                [/object]
                            [/modifications]
                        [/filter_wml]
                    [/not]
                [/filter]
                [effect]
                    apply_to=resistance
                    replace=no
                    [resistance]
                        arcane=10
                        fire=10
                        cold=10
                    [/resistance]
                [/effect]
                #not needed since image mod is applied in the physical version
                #                [effect]
                #                    apply_to=image_mod
                #                    replace="CS(50,0,50)"
                #                [/effect]
            [/object]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE bystander}
[/event]

[event]
    name=side turn
    id=eoma_pain_chainingII_event3
    first_time_only=no

    [remove_object]
        object_id=pain_chaining
    [/remove_object]
    [remove_object]
        object_id=pain_chaining_magic
    [/remove_object]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_UPKEEPLESS
    [dummy]
        id=eoma_upkeepless
        name=_"upkeepless"
        description=_"This unit costs no upkeep."
    [/dummy]
    # wmlxgettext: [abilities]
[/abilities]
upkeep=0
[+abilities]
    # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_CUSTOM_UPKEEP VALUE
    [dummy]
        id=eoma_upkeep{VALUE}
        name="{VALUE} "+_"upkeep"
        description=_"This unit costs "+{VALUE}+_" upkeep instead of the amount equal to level."
    [/dummy]
    # wmlxgettext: [abilities]
[/abilities]
upkeep={VALUE}
[+abilities]
    # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_FORAGE
    [regenerate]
        value=4
        id=eoma_forage
        name=_"forage"
        description=_"When resting on forest/fungus/farm/village tile, this unit will not cost any upkeep for a turn and regenerates 4 HP per turn. (does not cure poison)."
        affect_self=yes
        poison=slowed
        [filter]
            [filter_wml]
                resting=yes
            [/filter_wml]
            [filter_location]
                #forest, fungus, village, farm
                terrain=*^F*,*^Uf,*^Ufi,*^V*,*^Gvs
            [/filter_location]
            {FILTER_MAGICABSORBER}
        [/filter]
    [/regenerate]
    # wmlxgettext: [abilities]
[/abilities]
[event]
    name=side turn
    id=eoma_forage_event
    first_time_only=no
    [filter_condition]
        [have_unit]
            ability=eoma_forage
            side=$side_number
        [/have_unit]
    [/filter_condition]

    [remove_object]
        ability=eoma_forage
        side=$side_number
        object_id=forage_upkeep
    [/remove_object]

    [store_unit]
        [filter]
            ability=eoma_forage
            side=$side_number
            [filter_wml]
                resting=yes
            [/filter_wml]
            [filter_location]
                #forest, fungus, village, farm
                terrain=*^F*,*^Uf,*^Ufi,*^V*,*^Gvs
            [/filter_location]
        [/filter]
        variable=eoma_foragers
    [/store_unit]

    [foreach]
        array=eoma_foragers
        [do]
            [object]
                silent=yes
                duration=scenario
                id=forage_upkeep
                take_only_once=no
                [filter]
                    id=$this_item.id
                [/filter]
                [effect]
                    apply_to=loyal
                [/effect]
            [/object]
            [floating_text]
                x,y=$this_item.x,$this_item.y
                text="<span color='#00ff00'>" + _ "foraging" + "</span>"
            [/floating_text]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE eoma_foragers}
[/event]
[+abilities]
    # wmlxgettext: [/abilities]
#enddef
