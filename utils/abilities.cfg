#textdomain wesnoth-Era_of_Magic

#define WEAPON_SPECIAL_EOMA_ATTACK_ONLY
    [disable]
        id=eoma_attack_only
        name= _ "attack only"
        description= _ "This weapon will never be used on defense."
        active_on=defense
    [/disable]
#enddef

#define ABILITY_EOMA_KAMIKAZE
    [dummy]
        id=eoma_kamikaze
        name= _ "kamikaze"
#        description=_"This unit always hits a target when attacking, but it dies instantly."
        description=_"This unit always hits a target when attacking, but dies instantly afterwards."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]

[event]
    name=attack_end
	id=eoma_kamikaze_event
    first_time_only=no
    [filter]
        ability=eoma_kamikaze
        x,y=$x1,$y1
    [/filter]
    [kill]
        x,y=$x1,$y1
        animate=no
		fire_event=yes
    [/kill]
[/event]

[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_HITANDRUN VALUE
    [dummy]
        id=eoma_hitandrun{VALUE}
        name= _ "hit and run"+" "+"+"+{VALUE}
        description=_"This unit gains additional moves back after attacking, but cannot attack again."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=attack_end
	id=eoma_hitandrun_event{VALUE}
    first_time_only=no
    [filter]
        x,y=$x1,$y1
        ability=eoma_hitandrun{VALUE}
    [/filter]
    {VARIABLE_OP unit.moves add {VALUE}}
    [unstore_unit]
        variable=unit
        {COLOR_HEAL}
        text="+"+{VALUE}+_"movepoints"
        find_vacant=no
    [/unstore_unit]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_FURY
    [dummy]
        id=eoma_fury
        name= _ "fury"
        description=_"This unit can attack another unit after killing an enemy."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
	id=eoma_fury_event
    first_time_only=no
    [filter_second]
        side=$side_number
        ability=eoma_fury
    [/filter_second]
	
    {VARIABLE_OP second_unit.attacks_left add 1}
    [unstore_unit]
        variable=second_unit
        {COLOR_HARM}
        text= _ "FURY!"
        find_vacant=no
    [/unstore_unit]
[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_FURIOUSDEATH DMG TYPE
    [damage]
        id=eoma_furiousdeath{DMG}{TYPE}
        name= _ "furious death"+" ({DMG})"
#        description=_"Moments before this unit's death, it flies into a fury. The unit with this ability attacks all adjacent units and then it finally dies."
        description=_"Moments before this unit's death, it flies into a fury, dealing "+{DMG}+_" damage to adjacent units, friend or foes alike."
    [/damage] # wmlxgettext: [abilities]
[/abilities]
	
	[event]
		name=die
		id=eoma_furiousdeath_{DMG}{TYPE}
		first_time_only=no
		[filter]
			ability=eoma_furiousdeath{DMG}{TYPE}
		[/filter]
		
		{VARIABLE furydamage {DMG}}
		[if]
		{VARIABLE_CONDITIONAL unit.status.slowed boolean_equals yes}
		[then]
			{VARIABLE_OP furydamage divide 2}
			{VARIABLE_OP furydamage round floor}
		[/then]
		[/if]
		
		[harm_unit]
			[filter]
				[filter_adjacent]
					x,y=$x1,$y1
				[/filter_adjacent]
			[/filter]
			amount=$furydamage
			alignment=$unit.alignment
			damage_type={TYPE}
			fire_event=yes
			animate=yes
			delay=0
			experience=no
		[/harm_unit]
		
		{CLEAR_VARIABLE furydamage}
	[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_HARDLANDING DMG TYPE
    [dummy]
        id=eoma_hardlanding{DMG}{TYPE}
        name= _ "hard landing"+" ({DMG})"
        description=_"When this large unit is destroyed, it falls on a ground dealing damage to all adjacent units. "
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
	[event]
        name=die
		id=eoma_hardlanding_event{DMG}{TYPE}
        first_time_only=no
        [filter]
            ability=eoma_hardlanding{DMG}{TYPE}
        [/filter]

		[harm_unit]
			[filter]
				[and]
				[filter_adjacent]
					x,y=$x1,$y1
				[/filter_adjacent]
				[/and]
				[not]
					[filter_wml]
						[status]
							petrified=yes
						[/status]
					[/filter_wml]
				[/not]
			[/filter]
			amount={DMG}
			damage_type={TYPE}
			fire_event=yes
			animate=yes
			delay=0
			experience=no
		[/harm_unit]
    [/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_PARACHUTE
    [dummy]
        id=eoma_parachute
        name= _ "parachute"
#        description=_"The pilot of this machine is equipped with parachute and he can survive a destruction of his vehicle."
        description=_"The pilot of this machine is equipped with a parachute, and he can survive the destruction of his vehicle, continuing to fight as a lvl0 unit."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
	[event]
        name=die
		id=eoma_parachute_event
        first_time_only=no
        [filter]
            ability=eoma_parachute
        [/filter]
        [item]
          x,y=$x1,$y1
          image=scenery/wreck-burning-eoma.png
          halo=scenery/flames[01~15].png~FL(horiz):50
        [/item]
        [unit]
            type=EoMa_Parachutist
            side=$unit.side
            x,y=$x1,$y1
            moves=0
            animate=yes
        [/unit]
    [/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_EOMA_AREAEFFECT
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=eoma_areaeffect
        name= _ "area effect"
#        description=_"When this attack is used, all units adjacent to the target (except the attacker) get half of the basic damage. Does not work on defense."
        description=_"When this attack is used, all units adjacent to the target (except the attacker) receive half of the attack's damage. Does not work on defense."	
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
	[event]
		name=attacker_hits
		id=eoma_areaeffect_event
		first_time_only=no
		[filter_attack]
			special=eoma_areaeffect
		[/filter_attack]
		
		{VARIABLE halfdmg $weapon.damage}
		{VARIABLE_OP halfdmg divide 2}
		{VARIABLE_OP halfdmg round floor}

         	    [harm_unit]
                        [filter]
			    [filter_adjacent]
				x,y=$x2,$y2
			    [/filter_adjacent]
			    [not]
				x,y=$x1,$y1
			    [/not]
			    [filter_side]
			       [enemy_of]
			         side=$unit.side
			       [/enemy_of]
			    [/filter_side]
          		    [not]
				[filter_wml]
					[status]
						petrified=yes
					[/status]
				[/filter_wml]
			    [/not]
                        [/filter]
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
                        amount=$halfdmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
			delay=0
			experience=no
                    [/harm_unit]
	 	    [harm_unit]
                        [filter]
			    [filter_adjacent]
				x,y=$x2,$y2
			    [/filter_adjacent]
			    [not]
				x,y=$x1,$y1
			    [/not]
			    [filter_side]
			       [allied_with]
			         side=$unit.side
			       [/allied_with]
			       [or]
			         side=$unit.side
			       [/or]
			    [/filter_side]
                        [/filter]
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
                        amount=$halfdmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
			kill=no
			delay=0
			experience=no
                    [/harm_unit]
		[if]
		[have_unit]
			find_in=expfreeze
			[filter_adjacent]
						x,y=$x2,$y2
			[/filter_adjacent]
			[not]
				x,y=$x1,$y1
			[/not]
			[not]
				[filter_wml]
					[status]
						petrified=yes
					[/status]
				[/filter_wml]
			[/not]
		[/have_unit]
		[else]
			[store_unit]
				[filter]
					[filter_adjacent]
						x,y=$x2,$y2
					[/filter_adjacent]
					[not]
						x,y=$x1,$y1
					[/not]
					[not]
						[filter_wml]
							[status]
								petrified=yes
							[/status]
						[/filter_wml]
					[/not]
				[/filter]
				variable=expfreeze
				mode=append
			[/store_unit]
		[/else]
		[/if]
		{CLEAR_VARIABLE halfdmg}
	[/event]
	
	{EXPFREEZE_EVENT}
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#----------------------------------------------------
#define WEAPON_SPECIAL_EOMA_AREAEFFECTRANDOM CHANCETOHIT
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=eoma_areaeffectrandom
        name= _ "random area effect"
        description=_"When this attack is used, random units adjacent to the target (except the attacker) get half of the basic damage. Does not work on defense."
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
   [event]
      name=attacker_hits,attacker_misses
      id=eoma_areaeffect_event
      first_time_only=no
      [filter_attack]
         special=eoma_areaeffectrandom
      [/filter_attack]
      
      {VARIABLE halfdmg $weapon.damage}
      {VARIABLE_OP halfdmg divide 2}
      {VARIABLE_OP halfdmg round floor}
      
      [store_unit]
            [filter]
            [filter_adjacent]
               x,y=$x2,$y2
            [/filter_adjacent]
            [not]
               x,y=$x1,$y1
            [/not]
            [not]
               [filter_wml]
                  [status]
                     petrified=yes
                  [/status]
               [/filter_wml]
            [/not]
         [/filter]
            variable=bystander
        [/store_unit]
      
      {FOREACH bystander i}
            {RANDOM 1..100}
            [if]
			{VARIABLE_CONDITIONAL random less_than_equal_to {CHANCETOHIT}}
            [then]
         	    [harm_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
			    [filter_side]
			       [enemy_of]
			         side=$unit.side
			       [/enemy_of]
			    [/filter_side]
          		    [not]
				[filter_wml]
					[status]
						petrified=yes
					[/status]
				[/filter_wml]
			    [/not]
                        [/filter]
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
                        amount=$halfdmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
			delay=0
			experience=no
                    [/harm_unit]
	 	    [harm_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
			    [filter_side]
			       [allied_with]
			         side=$unit.side
			       [/allied_with]
			       [or]
			         side=$unit.side
			       [/or]
			    [/filter_side]
                        [/filter]
			[filter_second]
				x,y=$x1,$y1
			[/filter_second]
                        amount=$halfdmg
                        damage_type=$weapon.type
                        alignment=$unit.alignment
                        fire_event=yes
                        animate=defender
			kill=no
			delay=0
			experience=no
                    [/harm_unit]
               [if]
               [have_unit]
                  find_in=expfreeze
                  x,y=$bystander[$i].x,$bystander[$i].y
               [/have_unit]
               [else]
                  [store_unit]
                     [filter]
                        x,y=$bystander[$i].x,$bystander[$i].y
                     [/filter]
                     variable=expfreeze
                     mode=append
                  [/store_unit]
               [/else]
               [/if]
            [/then]
            [/if]
        {NEXT i}
      {CLEAR_VARIABLE halfdmg}
   [/event]
   
   {EXPFREEZE_EVENT}
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef
#----------------------------------------------------

#define WEAPON_SPECIAL_EOMA_SWALLOW VALUE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=eoma_swallow{VALUE}
        name= _ "swallow"+" +"+"{VALUE}"
        description=_"This unit gains hitpoints added to its current health whenever it kills a living unit."
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
    [event]
        name=die
		id=eoma_swallow_event{VALUE}
        first_time_only=no
        [filter]
            [not]
                [filter_wml]
                    [status]
                        not_living="yes"
                    [/status]
                [/filter_wml]
            [/not]
        [/filter]

        [filter_second_attack]
            special=eoma_swallow{VALUE}
        [/filter_second_attack]

		[heal_unit]
			[filter]
				x,y=$x2,$y2
			[/filter]
			amount={VALUE}
			animate=yes
		[/heal_unit]
    [/event]
	
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#define ABILITY_EOMA_BONECOLLECTOR DIVIDE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=eoma_bonecollector
        name= _ "bone collector" +" (1/{DIVIDE})"
        description=_"This unit gains hitpoints added to its current health whenever it kills a non-magical unit. The amount of hitpoints gained equals"+" 1/"+{DIVIDE}+" "+_"of defeated enemy's max health. This unit also gains +1 max hp with each successful kill of a non-magical unit."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
    [event]
        name=die
		id=eoma_bonecollector_event
        first_time_only=no
        [filter]
            [not]
                race=eoma_magical
            [/not]
        [/filter]

		#increase max hp
		{VARIABLE maxhp $second_unit.max_hitpoints}
		{VARIABLE_OP maxhp add 1}
		{MODIFY_UNIT id=$second_unit.id max_hitpoints $maxhp}
		[floating_text]
		   x,y=$x2,$y2
		   text="<span color='#00ff00'>"+_"+1 max hp"+"</span>"
		[/floating_text]
		[delay]
			time=400
		[/delay]
		{CLEAR_VARIABLE maxhp}
		#heal
        [filter_second]
            ability=eoma_bonecollector
        [/filter_second]
		
		{VARIABLE bcvalue $unit.max_hitpoints}
		{VARIABLE_OP bcvalue divide {DIVIDE}}
		{VARIABLE_OP bcvalue round floor}
		
		[heal_unit]
			[filter]
				x,y=$x2,$y2
			[/filter]
			amount=$bcvalue
			animate=yes
		[/heal_unit]
		{CLEAR_VARIABLE bcvalue}
    [/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_SPLIT TYPE LIMIT
    [dummy]
        id=eoma_split
        name= _ "split"
        description=_"When dying this unit splits into 2 smaller versions of itself."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
	[event]
        name=die
		id=eoma_split
        first_time_only=no
        [filter]
            ability=eoma_split
        [/filter]
        [unit]
            type={TYPE}
            side=$unit.side
            x,y=$x1,$y1
            moves=0
            animate=no
			hitpoints={LIMIT}
        [/unit]
		[unit]
            type={TYPE}
            side=$unit.side
            x,y=$x1,$y1
            moves=0
            animate=no
			hitpoints={LIMIT}
        [/unit]
    [/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_EOMA_ANTISHIELD
	[dummy]
        id=eoma_antishield
        name= _ "anti-shield"
        description=_"This attack negates all possible resistances, thus the damage output is always constant."
    [/dummy]
#enddef

#define ABILITY_EOMA_POISONOUS_AURA
    [dummy]
        id=eoma_poisonousaura
        name= _ "poisonous aura"
        description=_"All living non-magical enemy units adjacent to this unit lose 2 HP and become poisoned at the beginning of this unit's turn. If an enemy unit's HP goes to or below 0 HP, its HP are set to 1."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
	[event]
        name=turn refresh
		id=eoma_poisonousaura
        first_time_only=no
		
		[store_unit]
			[filter]
				type=EoMa_Chosen_of_Marsh
				side=$side_number
			[/filter]
			variable=com
		[/store_unit]
		
		{FOREACH com i}
		
		[animate_unit]
			flag=poisonaura
			[filter]
				id=$com[$i].id
			[/filter]
		[/animate_unit]
		
		[harm_unit]
			[filter]
				[filter_adjacent]
					id=$com[$i].id
					is_enemy=yes
					[not]
						race=mechanical
						[or]
							race=eoma_magical
						[/or]
						[or]
							race=undead
						[/or]
					[/not]
				[/filter_adjacent]
			[/filter]
			amount=2
			fire_event=yes
			animate=no
			kill=no
			poisoned=yes
		[/harm_unit]
		
		{NEXT i}
		
		{CLEAR_VARIABLE com}
    [/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_ALTER_EGO
    [dummy]
        id=eoma_alterego
        name= _ "alter ego"
        description=_"At night this unit transforms into its alternative version."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
	[event]
        name=turn refresh
		id=eoma_alterego
        first_time_only=no
		
		{TRANSFORM_UNIT (
type=EoMa_Atokpi_Master
[filter_location]
	time_of_day_id=first_watch,second_watch,underground,deep_underground
[/filter_location]
		) EoMa_Atokpi_Dark}
		
		{TRANSFORM_UNIT (
type=EoMa_Atokpi_Dark
[filter_location]
	time_of_day_id=dawn,dusk,morning,afternoon
[/filter_location]
		) EoMa_Atokpi_Master}
    [/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define ABILITY_EOMA_DAMAGEAURA VALUE TYPE ALIGNMENT
    [dummy]
        id=eoma_damageaura{VALUE}
        name= _ "damage aura"+" "+{VALUE}
        description=_"This unit harms all adjacent enemies at the start of each turn by a certain amount of damage (affected by the ToD bonus), giving the unit experience for each enemy harmed/killed."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]
	[event]
		name=side turn
		id={TYPE}_damageaura
		first_time_only=no
	
		[store_unit]
			[filter]
				type={TYPE}
				side=$side_number
			[/filter]
			variable={TYPE}
		[/store_unit]
		{FOREACH {TYPE} a}
			[harm_unit]
				[filter]
					[filter_adjacent]
						x,y=${TYPE}[$a].x,${TYPE}[$a].y
					[/filter_adjacent]
					[not]
						side=$side_number|
						[or]
							[filter_side]
								[allied_with]
									side=$side_number
							[/allied_with]
							[/filter_side]
						[/or]
					[/not]
				[/filter]
				[filter_second]
					id=${TYPE}[$a].id
				[/filter_second]
				[primary_attack]
					name=aura
				[/primary_attack]
				amount={VALUE}
				alignment={ALIGNMENT}
				damage_type=secret
				experience=yes
				fire_event=yes
				animate=yes
			[/harm_unit]       
			[store_unit]
				[filter]
					[filter_adjacent]
						x,y=${TYPE}[$a].x,${TYPE}[$a].y
					[/filter_adjacent]
					[filter_side]
						[enemy_of]
							side=$side_number
						[/enemy_of]
					[/filter_side]
				[/filter]
				variable=expsub
			[/store_unit]
			{IF_VAR expsub.length greater_than 0 (
			[then]
				{VARIABLE_OP expsub.experience sub ${TYPE}[$a].level}
				[unstore_unit]
					variable=expsub
					find_vacant=no
				[/unstore_unit]
			[/then]
			)}
		{NEXT a}
		[/event]
		[+abilities] # wmlxgettext: [/abilities]
		#enddef

#define ABILITY_EOMA_ZOMBIE_DAMAGEAURA VALUE VARIATION
	[dummy]
		id=lesser_eoma_damageaura{VALUE}
		name= _ "lesser damage aura"+" "+{VALUE}
		description=_"This unit harms all adjacent enemies at the start of each turn by a certain amount of damage (affected by the ToD bonus), without giving the unit experience for each enemy harmed. Like poison, it can't kill."
	[/dummy] # wmlxgettext: [abilities]
[/abilities]
	[event]
		name=side turn
		id={VARIATION}_damageaura_lesser
		first_time_only=no
	
		[store_unit]
			[filter]
				side=$side_number
				ability=lesser_eoma_damageaura{VALUE}
			[/filter]
			variable={VARIATION}
		[/store_unit]
		{FOREACH {VARIATION} a}
			[harm_unit]
				[filter]
					[filter_adjacent]
						x,y=${VARIATION}[$a].x,${VARIATION}[$a].y
					[/filter_adjacent]
					[not]
						side=$side_number|
						[or]
						[filter_side]
							[allied_with]
								side=$side_number
							[/allied_with]
						[/filter_side]
						[/or]
					[/not]
				[/filter]
				[filter_second]
					id=${VARIATION}[$a].id
				[/filter_second]
				[primary_attack]
					name=aura
				[/primary_attack]
				amount={VALUE}
				alignment=chaotic
				damage_type=secret
				experience=no
				fire_event=yes
				kill=no
				animate=yes
			[/harm_unit]       
		{NEXT a}
	[/event]
[+abilities] # wmlxgettext: [/abilities]
#enddef

#define IMMOBILIZE_MOVE_COST VALUE
                    [effect]
                        apply_to=movement_costs
			replace=no
		      [movement_costs]
			deep_water={VALUE}
        		shallow_water={VALUE}
        		swamp_water={VALUE}
        		reef={VALUE}
        		flat={VALUE}
        		sand={VALUE}
        		forest={VALUE}
        		hills={VALUE}
        		mountains={VALUE}
        		village={VALUE}
        		castle={VALUE}
        		cave={VALUE}
        		frozen={VALUE}
        		unwalkable={VALUE}
        		fungus={VALUE}
		      [/movement_costs]
                    [/effect]
#enddef

#define WEAPON_SPECIAL_EOMA_IMMOBILIZE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=eoma_immoblize
        name= _ "immobilize"
        description=_"When used offensively, units hit with this attack become unable to move for 1 turn"
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
[event]
    name=attacker hits
	id=eoma_immobilize_event
    first_time_only=no
    [filter_second]
      [filter_wml]
        [not]
	  [status]
	     immobilized=yes
	  [/status]
	[/not]
      [/filter_wml]
    [/filter_second]
    [filter_attack]
        special=eoma_immoblize
    [/filter_attack]

    # Record information about the immobilization
    [set_variables]
        name=immobilize_unit_information
        mode=append
        [value]
            id=$second_unit.id
            side=$second_unit.side
            turn_of_mobilizing=$"($turn_number| + 1)"
        [/value]
    [/set_variables]
    {MODIFY_UNIT id=$second_unit.id status.immobilized yes}
        [object]
            silent=yes
            [filter]
                find_in=second_unit
            [/filter]
            {IMMOBILIZE_MOVE_COST 99}
        [/object]
[/event]
[event]
    name=side turn
	id=eoma_immobilize_event2
    first_time_only=no

    {FOREACH immobilize_unit_information i}
        [if]
            [variable]
                name=immobilize_unit_information[$i].turn_of_mobilizing
                less_than_equal_to=$turn_number
            [/variable]
            [and]
                [variable]
                    name=immobilize_unit_information[$i].side
                    equals=$side_number
                [/variable]
            [/and]

            [then]
        [object]
            silent=yes
            [filter]
                find_in=immobilize_unit_information[$i]
            [/filter]
            {IMMOBILIZE_MOVE_COST -99}
        [/object]
        {MODIFY_UNIT id=$immobilize_unit_information[$i].id status.immobilized no}

                [clear_variable]
                    name=immobilize_unit_information[$i]
                [/clear_variable]
            [/then]
        [/if]
    {NEXT i}
[/event]

[event]
	name=victory
	id=eoma_immobilize_event3
    first_time_only=no
	
    {FOREACH immobilize_unit_information i}
        [object]
            silent=yes
            [filter]
                find_in=immobilize_unit_information[$i]
            [/filter]
            {IMMOBILIZE_MOVE_COST -99}
        [/object]
       {MODIFY_UNIT id=$immobilize_unit_information[$i].side.id status.immobilized no}

                [clear_variable]
                    name=immobilize_unit_information[$i]
                [/clear_variable]
    {NEXT i}
	{CLEAR_VARIABLE immobilize_unit_information}
[/event]
[+attack]
[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
#enddef

#define DAZZLE_DEFENSE VALUE
                    [effect]
                        apply_to=defense
			replace=no
		      [defense]
			deep_water={VALUE}
        		shallow_water={VALUE}
        		swamp_water={VALUE}
        		reef={VALUE}
        		flat={VALUE}
        		sand={VALUE}
        		forest={VALUE}
        		hills={VALUE}
        		mountains={VALUE}
        		village={VALUE}
        		castle={VALUE}
        		cave={VALUE}
        		frozen={VALUE}
        		unwalkable={VALUE}
        		fungus={VALUE}
		      [/defense]
                    [/effect]
#enddef

#define WEAPON_SPECIAL_EOMA_DAZZLE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=eoma_dazzle
        name= _ "dazzle"
        description=_"When used offensively, units hit with this attack suffer a 35% reduction in damage and a 10% reduction in defenses for 1 turn"
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
[event]
    name=attacker hits
	id=eoma_dazzle_event
    first_time_only=no
    [filter_second]
        [not]
	  ability=dazzled
	[/not]
    [/filter_second]
    [filter_attack]
        special=eoma_dazzle
    [/filter_attack]

    # Record information about the dazzling
    [set_variables]
        name=dazzle_unit_information
        mode=append
        [value]
            id=$second_unit.id
            side=$second_unit.side
            turn_of_undazzle=$"($turn_number| + 1)"
        [/value]
    [/set_variables]
    {MODIFY_UNIT id=$second_unit.id status.dazzled yes}
        [object]
            silent=yes
            [filter]
                find_in=second_unit
            [/filter]
            {DAZZLE_DEFENSE 10}
		[effect]
			apply_to=new_ability
			[abilities]
                              [leadership]
                                  id=dazzled
                                  value=-30
                                  cumulative=no
                                  affect_self=yes
                              [/leadership]
			[/abilities]
		[/effect]
        [/object]
[/event]
[event]
    name=side turn
	id=eoma_dazzle_event2
    first_time_only=no

    {FOREACH dazzle_unit_information i}
        [if]
            [variable]
                name=dazzle_unit_information[$i].turn_of_mobilizing
                less_than_equal_to=$turn_number
            [/variable]
            [and]
                [variable]
                    name=dazzle_unit_information[$i].side
                    equals=$side_number
                [/variable]
            [/and]

            [then]
        [object]
            silent=yes
            [filter]
                find_in=dazzle_unit_information[$i]
            [/filter]
            {DAZZLE_DEFENSE -10}
		[effect]
			apply_to=remove_ability
			[abilities]
                              [leadership]
                                  id=dazzled
                                  value=-30
                                  cumulative=no
                                  affect_self=yes
                              [/leadership]
			[/abilities]
		[/effect]
        [/object]
        {MODIFY_UNIT id=$dazzle_unit_information[$i].id status.dazzled no}

                [clear_variable]
                    name=dazzle_unit_information[$i]
                [/clear_variable]
            [/then]
        [/if]
    {NEXT i}
[/event]

[event]
	name=victory
	id=eoma_dazzle_event3
    first_time_only=no
	
    {FOREACH dazzle_unit_information i}
        [object]
            silent=yes
            [filter]
                find_in=dazzle_unit_information[$i]
            [/filter]
            {DAZZLE_DEFENSE -99}
		[effect]
			apply_to=remove_ability
			[abilities]
                              [leadership]
                                  id=dazzled
                                  value=-30
                                  cumulative=no
                                  affect_self=yes
                              [/leadership]
			[/abilities]
		[/effect]
        [/object]
       {MODIFY_UNIT id=$dazzle_unit_information[$i].side.id status.dazzled no}

                [clear_variable]
                    name=dazzle_unit_information[$i]
                [/clear_variable]
    {NEXT i}
	{CLEAR_VARIABLE dazzle_unit_information}
[/event]
[+attack]
[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
#enddef

