#define BANISH_ANIM X Y
		[animate_unit]
			flag=banished
			[filter]
				x,y={X},{Y}
			[/filter]
		[/animate_unit]
#enddef

#define WEAPON_SPECIAL_EOMA_BANISH
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=eoma_banish
        name= _ "banish"
        name_inactive= _ "banish"
        description=_"If this attack hits an enemy magical unit, the enemy will turn into a ‘Dimensional Gate’, (this happens only if the target is of lower level in comparison to the owner of this weapon special). If the enemy is of the same level, then it won't be affected."
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

#attacker----------------------------------------------------------
    [event]
        first_time_only=no
		id=eoma_banish_attacker1_event
        name=attacker hits
		
        [filter_attack]
            special=eoma_banish
        [/filter_attack]
        [filter]
			level=2
			[or]
				level=3
			[/or]
        [/filter]
		[filter_second]
            race=eoma_magical
			[and]
				level=0
				[or]
					level=1
				[/or]
			[/and]
        [/filter_second]

		[fire_event]
			name=touched
			[primary_unit]
				x,y=$x1,$y1
			[/primary_unit]
			[secondary_unit]
				x,y=$x2,$y2
			[/secondary_unit]
		[/fire_event]
	[/event]
	
	[event]
        first_time_only=no
		id=eoma_banish_attacker2_event
        name=attacker hits
		
        [filter_attack]
            special=eoma_banish
        [/filter_attack]
        [filter]
			level=3
        [/filter]
		[filter_second]
            race=eoma_magical
			level=2
        [/filter_second]

		{VARIABLE dg_type 2}
		[fire_event]
			name=touched
			[primary_unit]
				x,y=$x1,$y1
			[/primary_unit]
			[secondary_unit]
				x,y=$x2,$y2
			[/secondary_unit]
		[/fire_event]
	[/event]
#defender----------------------------------------------------------
    [event]
        first_time_only=no
		id=eoma_banish_defender1_event
        name=defender hits
		
        [filter_second_attack]
            special=eoma_banish
        [/filter_second_attack]
        [filter_second]
			level=2
			[or]
				level=3
			[/or]
        [/filter_second]
		[filter]
            race=eoma_magical
			[and]
				level=0
				[or]
					level=1
				[/or]
			[/and]
        [/filter]

		[fire_event]
			name=touched
			[primary_unit]
				x,y=$x2,$y2
			[/primary_unit]
			[secondary_unit]
				x,y=$x1,$y1
			[/secondary_unit]
		[/fire_event]		
	[/event]
	
	[event]
        first_time_only=no
		id=eoma_banish_defender2_event
        name=defender hits
		
        [filter_second_attack]
            special=eoma_banish
        [/filter_second_attack]
        [filter_second]
			level=3
        [/filter_second]
		[filter]
            race=eoma_magical
			level=2
        [/filter]

		{VARIABLE dg_type 2}
		[fire_event]
			name=touched
			[primary_unit]
				x,y=$x2,$y2
			[/primary_unit]
			[secondary_unit]
				x,y=$x1,$y1
			[/secondary_unit]
		[/fire_event]
	[/event]
	
	#attackend
    [event]
        first_time_only=no
		id=eoma_banish_event3
        name=attack end
		[filter_attack]
			special=eoma_banish
		[/filter_attack]
		
		{IF_VAR touched equals yes (
			[then]
				{CLEAR_VARIABLE touched}
				[fire_event]
					name=post banish
					[primary_unit]
						x,y=$x1,$y1
					[/primary_unit]
					[secondary_unit]
						x,y=$x2,$y2
					[/secondary_unit]
				[/fire_event]
			[/then]
		)}
    [/event]
	[event]
        first_time_only=no
		id=eoma_banish_event4
        name=attack end
		[filter_second_attack]
			special=eoma_banish
		[/filter_second_attack]
		
		{IF_VAR touched equals yes (
			[then]
				{CLEAR_VARIABLE touched}
				[fire_event]
					name=post banish
					[primary_unit]
						x,y=$x2,$y2
					[/primary_unit]
					[secondary_unit]
						x,y=$x1,$y1
					[/secondary_unit]
				[/fire_event]
			[/then]
		)}
    [/event]
	
	[event]
		name=touched
		id=banish-touched
		first_time_only=no
		
		{BANISH_ANIM $x2 $y2}
		{IF_VAR dg_type equals 2 (
		[then]
			{UNIT $unit.side EoMa_Dimensional_Gate_II $x2 $y2 (placement,animate=map_overwrite,yes)}
		[/then]
		[else]
			{UNIT $unit.side EoMa_Dimensional_Gate $x2 $y2 (placement,animate=map_overwrite,yes)}
		[/else]
		)}
		{VARIABLE touched yes}	
		{CLEAR_VARIABLE dg_type}		
	[/event]
	
	[event]
		name=post banish
		first_time_only=no
		
		
		{VARIABLE second_unit.attacks_left 0}
		{VARIABLE second_unit.moves 0}
		{VARIABLE second_unit.experience 0}
		{VARIABLE_OP second_unit.experience add $unit.level}
		{VARIABLE second_unit.side $unit.side}
		[unstore_unit]
			variable=second_unit
			find_vacant=no
		[/unstore_unit]
		{VARIABLE_OP unit.experience add 3}
		[unstore_unit]
			variable=unit
			find_vacant=no
			text=_ "+3 exp"
			red,green,blue=50,50,200
		[/unstore_unit]
	[/event]
	
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef